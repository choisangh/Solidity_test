{
	"id": "ec3654d44644c879800705dfd86d8ab5",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"test/Loop.sol": {
				"content": "pragma solidity >=0.8.0 <0.9.0;\r\n\r\n\r\ncontract Loop{\r\n    function forLoop() public{\r\n        uint8 sum = 0;\r\n        for(uint8 i=1; i < 11; i++){\r\n            sum += i;\r\n        }\r\n    }\r\n\r\n    function whileLoop() public{\r\n        uint8 sum=0;\r\n        uint8 i=1;\r\n        while(i<11){\r\n            sum += i ;\r\n            i++;\r\n        }\r\n\r\n    }\r\n    function doWhileLoop() public{\r\n        uint8 sum = 0;\r\n        uint8 i = 1;\r\n        do{\r\n            sum += 1;\r\n            i++;\r\n        }while(i<11);\r\n    }\r\n\r\n    function loopbreak() public{\r\n        uint8 sum = 0;\r\n        for(uint8 i=1; i < 11; i++){\r\n            sum += 1 ;\r\n            if (sum>10){\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    function loopcontinue() public{\r\n        uint8 sum = 0;\r\n        for(uint8 i=1; i < 11; i++){\r\n            if (i == 5){\r\n                continue; //밑에 줄 생략략\r\n            }\r\n            sum += 1; \r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"test/Loop.sol": {
				"Loop": {
					"abi": [
						{
							"inputs": [],
							"name": "doWhileLoop",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "forLoop",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "loopbreak",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "loopcontinue",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "whileLoop",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"test/Loop.sol\":37:968  contract Loop{\r... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"test/Loop.sol\":37:968  contract Loop{\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x091da0cf\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x174c9c7e\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xe7c898ef\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xf0d3799c\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xfc0e6008\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"test/Loop.sol\":522:719  function loopbreak() public{\r... */\n    tag_3:\n      tag_8\n      tag_9\n      jump\t// in\n    tag_8:\n      stop\n        /* \"test/Loop.sol\":354:514  function doWhileLoop() public{\r... */\n    tag_4:\n      tag_10\n      tag_11\n      jump\t// in\n    tag_10:\n      stop\n        /* \"test/Loop.sol\":194:348  function whileLoop() public{\r... */\n    tag_5:\n      tag_12\n      tag_13\n      jump\t// in\n    tag_12:\n      stop\n        /* \"test/Loop.sol\":731:957  function loopcontinue() public{\r... */\n    tag_6:\n      tag_14\n      tag_15\n      jump\t// in\n    tag_14:\n      stop\n        /* \"test/Loop.sol\":57:186  function forLoop() public{\r... */\n    tag_7:\n      tag_16\n      tag_17\n      jump\t// in\n    tag_16:\n      stop\n        /* \"test/Loop.sol\":522:719  function loopbreak() public{\r... */\n    tag_9:\n        /* \"test/Loop.sol\":560:569  uint8 sum */\n      0x00\n        /* \"test/Loop.sol\":588:595  uint8 i */\n      dup1\n        /* \"test/Loop.sol\":596:597  1 */\n      0x01\n        /* \"test/Loop.sol\":588:597  uint8 i=1 */\n      swap1\n      pop\n        /* \"test/Loop.sol\":584:712  for(uint8 i=1; i < 11; i++){\r... */\n    tag_19:\n        /* \"test/Loop.sol\":603:605  11 */\n      0x0b\n        /* \"test/Loop.sol\":599:600  i */\n      dup2\n        /* \"test/Loop.sol\":599:605  i < 11 */\n      0xff\n      and\n      lt\n        /* \"test/Loop.sol\":584:712  for(uint8 i=1; i < 11; i++){\r... */\n      iszero\n      tag_20\n      jumpi\n        /* \"test/Loop.sol\":633:634  1 */\n      0x01\n        /* \"test/Loop.sol\":626:634  sum += 1 */\n      dup3\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      swap2\n      pop\n        /* \"test/Loop.sol\":658:660  10 */\n      0x0a\n        /* \"test/Loop.sol\":654:657  sum */\n      dup3\n        /* \"test/Loop.sol\":654:660  sum>10 */\n      0xff\n      and\n      gt\n        /* \"test/Loop.sol\":650:701  if (sum>10){\r... */\n      iszero\n      tag_24\n      jumpi\n        /* \"test/Loop.sol\":680:685  break */\n      jump(tag_20)\n        /* \"test/Loop.sol\":650:701  if (sum>10){\r... */\n    tag_24:\n        /* \"test/Loop.sol\":607:610  i++ */\n      dup1\n      dup1\n      tag_25\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      swap2\n      pop\n      pop\n        /* \"test/Loop.sol\":584:712  for(uint8 i=1; i < 11; i++){\r... */\n      jump(tag_19)\n    tag_20:\n      pop\n        /* \"test/Loop.sol\":549:719  {\r... */\n      pop\n        /* \"test/Loop.sol\":522:719  function loopbreak() public{\r... */\n      jump\t// out\n        /* \"test/Loop.sol\":354:514  function doWhileLoop() public{\r... */\n    tag_11:\n        /* \"test/Loop.sol\":394:403  uint8 sum */\n      0x00\n        /* \"test/Loop.sol\":418:425  uint8 i */\n      dup1\n        /* \"test/Loop.sol\":428:429  1 */\n      0x01\n        /* \"test/Loop.sol\":418:429  uint8 i = 1 */\n      swap1\n      pop\n        /* \"test/Loop.sol\":440:507  do{\r... */\n    tag_28:\n        /* \"test/Loop.sol\":464:465  1 */\n      0x01\n        /* \"test/Loop.sol\":457:465  sum += 1 */\n      dup3\n      tag_31\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_31:\n      swap2\n      pop\n        /* \"test/Loop.sol\":480:483  i++ */\n      dup1\n      dup1\n      tag_32\n      swap1\n      tag_26\n      jump\t// in\n    tag_32:\n      swap2\n      pop\n      pop\n        /* \"test/Loop.sol\":503:505  11 */\n      0x0b\n        /* \"test/Loop.sol\":501:502  i */\n      dup2\n        /* \"test/Loop.sol\":501:505  i<11 */\n      0xff\n      and\n      lt\n        /* \"test/Loop.sol\":440:507  do{\r... */\n      tag_28\n      jumpi\n        /* \"test/Loop.sol\":383:514  {\r... */\n      pop\n      pop\n        /* \"test/Loop.sol\":354:514  function doWhileLoop() public{\r... */\n      jump\t// out\n        /* \"test/Loop.sol\":194:348  function whileLoop() public{\r... */\n    tag_13:\n        /* \"test/Loop.sol\":232:241  uint8 sum */\n      0x00\n        /* \"test/Loop.sol\":254:261  uint8 i */\n      dup1\n        /* \"test/Loop.sol\":262:263  1 */\n      0x01\n        /* \"test/Loop.sol\":254:263  uint8 i=1 */\n      swap1\n      pop\n        /* \"test/Loop.sol\":274:339  while(i<11){\r... */\n    tag_34:\n        /* \"test/Loop.sol\":282:284  11 */\n      0x0b\n        /* \"test/Loop.sol\":280:281  i */\n      dup2\n        /* \"test/Loop.sol\":280:284  i<11 */\n      0xff\n      and\n      lt\n        /* \"test/Loop.sol\":274:339  while(i<11){\r... */\n      iszero\n      tag_35\n      jumpi\n        /* \"test/Loop.sol\":307:308  i */\n      dup1\n        /* \"test/Loop.sol\":300:308  sum += i */\n      dup3\n      tag_36\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_36:\n      swap2\n      pop\n        /* \"test/Loop.sol\":324:327  i++ */\n      dup1\n      dup1\n      tag_37\n      swap1\n      tag_26\n      jump\t// in\n    tag_37:\n      swap2\n      pop\n      pop\n        /* \"test/Loop.sol\":274:339  while(i<11){\r... */\n      jump(tag_34)\n    tag_35:\n        /* \"test/Loop.sol\":221:348  {\r... */\n      pop\n      pop\n        /* \"test/Loop.sol\":194:348  function whileLoop() public{\r... */\n      jump\t// out\n        /* \"test/Loop.sol\":731:957  function loopcontinue() public{\r... */\n    tag_15:\n        /* \"test/Loop.sol\":772:781  uint8 sum */\n      0x00\n        /* \"test/Loop.sol\":800:807  uint8 i */\n      dup1\n        /* \"test/Loop.sol\":808:809  1 */\n      0x01\n        /* \"test/Loop.sol\":800:809  uint8 i=1 */\n      swap1\n      pop\n        /* \"test/Loop.sol\":796:950  for(uint8 i=1; i < 11; i++){\r... */\n    tag_39:\n        /* \"test/Loop.sol\":815:817  11 */\n      0x0b\n        /* \"test/Loop.sol\":811:812  i */\n      dup2\n        /* \"test/Loop.sol\":811:817  i < 11 */\n      0xff\n      and\n      lt\n        /* \"test/Loop.sol\":796:950  for(uint8 i=1; i < 11; i++){\r... */\n      iszero\n      tag_40\n      jumpi\n        /* \"test/Loop.sol\":847:848  5 */\n      0x05\n        /* \"test/Loop.sol\":842:843  i */\n      dup2\n        /* \"test/Loop.sol\":842:848  i == 5 */\n      0xff\n      and\n      eq\n        /* \"test/Loop.sol\":838:915  if (i == 5){\r... */\n      iszero\n      tag_42\n      jumpi\n        /* \"test/Loop.sol\":868:876  continue */\n      jump(tag_41)\n        /* \"test/Loop.sol\":838:915  if (i == 5){\r... */\n    tag_42:\n        /* \"test/Loop.sol\":936:937  1 */\n      0x01\n        /* \"test/Loop.sol\":929:937  sum += 1 */\n      dup3\n      tag_43\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_43:\n      swap2\n      pop\n        /* \"test/Loop.sol\":796:950  for(uint8 i=1; i < 11; i++){\r... */\n    tag_41:\n        /* \"test/Loop.sol\":819:822  i++ */\n      dup1\n      dup1\n      tag_44\n      swap1\n      tag_26\n      jump\t// in\n    tag_44:\n      swap2\n      pop\n      pop\n        /* \"test/Loop.sol\":796:950  for(uint8 i=1; i < 11; i++){\r... */\n      jump(tag_39)\n    tag_40:\n      pop\n        /* \"test/Loop.sol\":761:957  {\r... */\n      pop\n        /* \"test/Loop.sol\":731:957  function loopcontinue() public{\r... */\n      jump\t// out\n        /* \"test/Loop.sol\":57:186  function forLoop() public{\r... */\n    tag_17:\n        /* \"test/Loop.sol\":93:102  uint8 sum */\n      0x00\n        /* \"test/Loop.sol\":121:128  uint8 i */\n      dup1\n        /* \"test/Loop.sol\":129:130  1 */\n      0x01\n        /* \"test/Loop.sol\":121:130  uint8 i=1 */\n      swap1\n      pop\n        /* \"test/Loop.sol\":117:179  for(uint8 i=1; i < 11; i++){\r... */\n    tag_46:\n        /* \"test/Loop.sol\":136:138  11 */\n      0x0b\n        /* \"test/Loop.sol\":132:133  i */\n      dup2\n        /* \"test/Loop.sol\":132:138  i < 11 */\n      0xff\n      and\n      lt\n        /* \"test/Loop.sol\":117:179  for(uint8 i=1; i < 11; i++){\r... */\n      iszero\n      tag_47\n      jumpi\n        /* \"test/Loop.sol\":166:167  i */\n      dup1\n        /* \"test/Loop.sol\":159:167  sum += i */\n      dup3\n      tag_49\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_49:\n      swap2\n      pop\n        /* \"test/Loop.sol\":140:143  i++ */\n      dup1\n      dup1\n      tag_50\n      swap1\n      tag_26\n      jump\t// in\n    tag_50:\n      swap2\n      pop\n      pop\n        /* \"test/Loop.sol\":117:179  for(uint8 i=1; i < 11; i++){\r... */\n      jump(tag_46)\n    tag_47:\n      pop\n        /* \"test/Loop.sol\":82:186  {\r... */\n      pop\n        /* \"test/Loop.sol\":57:186  function forLoop() public{\r... */\n      jump\t// out\n        /* \"#utility.yul\":7:244   */\n    tag_23:\n        /* \"#utility.yul\":45:48   */\n      0x00\n        /* \"#utility.yul\":64:82   */\n      tag_53\n        /* \"#utility.yul\":80:81   */\n      dup3\n        /* \"#utility.yul\":64:82   */\n      tag_54\n      jump\t// in\n    tag_53:\n        /* \"#utility.yul\":59:82   */\n      swap2\n      pop\n        /* \"#utility.yul\":96:114   */\n      tag_55\n        /* \"#utility.yul\":112:113   */\n      dup4\n        /* \"#utility.yul\":96:114   */\n      tag_54\n      jump\t// in\n    tag_55:\n        /* \"#utility.yul\":91:114   */\n      swap3\n      pop\n        /* \"#utility.yul\":186:187   */\n      dup3\n        /* \"#utility.yul\":180:184   */\n      0xff\n        /* \"#utility.yul\":176:188   */\n      sub\n        /* \"#utility.yul\":173:174   */\n      dup3\n        /* \"#utility.yul\":170:189   */\n      gt\n        /* \"#utility.yul\":167:212   */\n      iszero\n      tag_56\n      jumpi\n        /* \"#utility.yul\":192:210   */\n      tag_57\n      tag_58\n      jump\t// in\n    tag_57:\n        /* \"#utility.yul\":167:212   */\n    tag_56:\n        /* \"#utility.yul\":236:237   */\n      dup3\n        /* \"#utility.yul\":233:234   */\n      dup3\n        /* \"#utility.yul\":229:238   */\n      add\n        /* \"#utility.yul\":222:238   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:244   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":250:336   */\n    tag_54:\n        /* \"#utility.yul\":285:292   */\n      0x00\n        /* \"#utility.yul\":325:329   */\n      0xff\n        /* \"#utility.yul\":318:323   */\n      dup3\n        /* \"#utility.yul\":314:330   */\n      and\n        /* \"#utility.yul\":303:330   */\n      swap1\n      pop\n        /* \"#utility.yul\":250:336   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":342:509   */\n    tag_26:\n        /* \"#utility.yul\":379:382   */\n      0x00\n        /* \"#utility.yul\":402:424   */\n      tag_61\n        /* \"#utility.yul\":418:423   */\n      dup3\n        /* \"#utility.yul\":402:424   */\n      tag_54\n      jump\t// in\n    tag_61:\n        /* \"#utility.yul\":393:424   */\n      swap2\n      pop\n        /* \"#utility.yul\":446:450   */\n      0xff\n        /* \"#utility.yul\":439:444   */\n      dup3\n        /* \"#utility.yul\":436:451   */\n      eq\n        /* \"#utility.yul\":433:474   */\n      iszero\n      tag_62\n      jumpi\n        /* \"#utility.yul\":454:472   */\n      tag_63\n      tag_58\n      jump\t// in\n    tag_63:\n        /* \"#utility.yul\":433:474   */\n    tag_62:\n        /* \"#utility.yul\":501:502   */\n      0x01\n        /* \"#utility.yul\":494:499   */\n      dup3\n        /* \"#utility.yul\":490:503   */\n      add\n        /* \"#utility.yul\":483:503   */\n      swap1\n      pop\n        /* \"#utility.yul\":342:509   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":515:695   */\n    tag_58:\n        /* \"#utility.yul\":563:640   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":560:561   */\n      0x00\n        /* \"#utility.yul\":553:641   */\n      mstore\n        /* \"#utility.yul\":660:664   */\n      0x11\n        /* \"#utility.yul\":657:658   */\n      0x04\n        /* \"#utility.yul\":650:665   */\n      mstore\n        /* \"#utility.yul\":684:688   */\n      0x24\n        /* \"#utility.yul\":681:682   */\n      0x00\n        /* \"#utility.yul\":674:689   */\n      revert\n\n    auxdata: 0xa26469706673582212205bdb0b66e6050f915648fec38dd9a4f988df9f93db09326d78126beb70dcac9f64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5061029e806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063091da0cf1461005c578063174c9c7e14610066578063e7c898ef14610070578063f0d3799c1461007a578063fc0e600814610084575b600080fd5b61006461008e565b005b61006e6100d9565b005b61007861010d565b005b610082610146565b005b61008c610192565b005b600080600190505b600b8160ff1610156100d5576001826100af91906101cb565b9150600a8260ff1611156100c2576100d5565b80806100cd9061020f565b915050610096565b5050565b600080600190505b6001826100ee91906101cb565b915080806100fb9061020f565b915050600b8160ff16106100e1575050565b600080600190505b600b8160ff16101561014257808261012d91906101cb565b9150808061013a9061020f565b915050610115565b5050565b600080600190505b600b8160ff16101561018e5760058160ff16141561016b5761017b565b60018261017891906101cb565b91505b80806101869061020f565b91505061014e565b5050565b600080600190505b600b8160ff1610156101c75780826101b291906101cb565b915080806101bf9061020f565b91505061019a565b5050565b60006101d682610202565b91506101e183610202565b92508260ff038211156101f7576101f6610239565b5b828201905092915050565b600060ff82169050919050565b600061021a82610202565b915060ff82141561022e5761022d610239565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fdfea26469706673582212205bdb0b66e6050f915648fec38dd9a4f988df9f93db09326d78126beb70dcac9f64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x29E DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x91DA0CF EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x174C9C7E EQ PUSH2 0x66 JUMPI DUP1 PUSH4 0xE7C898EF EQ PUSH2 0x70 JUMPI DUP1 PUSH4 0xF0D3799C EQ PUSH2 0x7A JUMPI DUP1 PUSH4 0xFC0E6008 EQ PUSH2 0x84 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64 PUSH2 0x8E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6E PUSH2 0xD9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x78 PUSH2 0x10D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x82 PUSH2 0x146 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x8C PUSH2 0x192 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 POP JUMPDEST PUSH1 0xB DUP2 PUSH1 0xFF AND LT ISZERO PUSH2 0xD5 JUMPI PUSH1 0x1 DUP3 PUSH2 0xAF SWAP2 SWAP1 PUSH2 0x1CB JUMP JUMPDEST SWAP2 POP PUSH1 0xA DUP3 PUSH1 0xFF AND GT ISZERO PUSH2 0xC2 JUMPI PUSH2 0xD5 JUMP JUMPDEST DUP1 DUP1 PUSH2 0xCD SWAP1 PUSH2 0x20F JUMP JUMPDEST SWAP2 POP POP PUSH2 0x96 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 POP JUMPDEST PUSH1 0x1 DUP3 PUSH2 0xEE SWAP2 SWAP1 PUSH2 0x1CB JUMP JUMPDEST SWAP2 POP DUP1 DUP1 PUSH2 0xFB SWAP1 PUSH2 0x20F JUMP JUMPDEST SWAP2 POP POP PUSH1 0xB DUP2 PUSH1 0xFF AND LT PUSH2 0xE1 JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 POP JUMPDEST PUSH1 0xB DUP2 PUSH1 0xFF AND LT ISZERO PUSH2 0x142 JUMPI DUP1 DUP3 PUSH2 0x12D SWAP2 SWAP1 PUSH2 0x1CB JUMP JUMPDEST SWAP2 POP DUP1 DUP1 PUSH2 0x13A SWAP1 PUSH2 0x20F JUMP JUMPDEST SWAP2 POP POP PUSH2 0x115 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 POP JUMPDEST PUSH1 0xB DUP2 PUSH1 0xFF AND LT ISZERO PUSH2 0x18E JUMPI PUSH1 0x5 DUP2 PUSH1 0xFF AND EQ ISZERO PUSH2 0x16B JUMPI PUSH2 0x17B JUMP JUMPDEST PUSH1 0x1 DUP3 PUSH2 0x178 SWAP2 SWAP1 PUSH2 0x1CB JUMP JUMPDEST SWAP2 POP JUMPDEST DUP1 DUP1 PUSH2 0x186 SWAP1 PUSH2 0x20F JUMP JUMPDEST SWAP2 POP POP PUSH2 0x14E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 POP JUMPDEST PUSH1 0xB DUP2 PUSH1 0xFF AND LT ISZERO PUSH2 0x1C7 JUMPI DUP1 DUP3 PUSH2 0x1B2 SWAP2 SWAP1 PUSH2 0x1CB JUMP JUMPDEST SWAP2 POP DUP1 DUP1 PUSH2 0x1BF SWAP1 PUSH2 0x20F JUMP JUMPDEST SWAP2 POP POP PUSH2 0x19A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D6 DUP3 PUSH2 0x202 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E1 DUP4 PUSH2 0x202 JUMP JUMPDEST SWAP3 POP DUP3 PUSH1 0xFF SUB DUP3 GT ISZERO PUSH2 0x1F7 JUMPI PUSH2 0x1F6 PUSH2 0x239 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21A DUP3 PUSH2 0x202 JUMP JUMPDEST SWAP2 POP PUSH1 0xFF DUP3 EQ ISZERO PUSH2 0x22E JUMPI PUSH2 0x22D PUSH2 0x239 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMPDEST 0xDB SIGNEXTEND PUSH7 0xE6050F915648FE 0xC3 DUP14 0xD9 LOG4 0xF9 DUP9 0xDF SWAP16 SWAP4 0xDB MULMOD ORIGIN PUSH14 0x78126BEB70DCAC9F64736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "37:931:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@doWhileLoop_73": {
									"entryPoint": 217,
									"id": 73,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@forLoop_25": {
									"entryPoint": 402,
									"id": 25,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@loopbreak_103": {
									"entryPoint": 142,
									"id": 103,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@loopcontinue_133": {
									"entryPoint": 326,
									"id": 133,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@whileLoop_49": {
									"entryPoint": 269,
									"id": 49,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"checked_add_t_uint8": {
									"entryPoint": 459,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 514,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint8": {
									"entryPoint": 527,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 569,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:698:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "49:195:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "59:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "80:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nodeType": "YulIdentifier",
																	"src": "64:15:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "64:18:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "59:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "91:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "112:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nodeType": "YulIdentifier",
																	"src": "96:15:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:18:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "91:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "190:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "192:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "192:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "192:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "173:1:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "180:4:1",
																				"type": "",
																				"value": "0xff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "186:1:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "176:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "176:12:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "170:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "170:19:1"
															},
															"nodeType": "YulIf",
															"src": "167:45:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "222:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "233:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "236:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "229:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "229:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "222:3:1"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "36:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "39:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "45:3:1",
														"type": ""
													}
												],
												"src": "7:237:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "293:43:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "303:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "318:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "325:4:1",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "314:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "314:16:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "303:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "275:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "285:7:1",
														"type": ""
													}
												],
												"src": "250:86:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "383:126:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "393:31:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "418:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nodeType": "YulIdentifier",
																	"src": "402:15:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "402:22:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "393:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "452:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "454:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "454:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "454:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "439:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "446:4:1",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "436:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "436:15:1"
															},
															"nodeType": "YulIf",
															"src": "433:41:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "483:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "494:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "501:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "490:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "490:13:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "483:3:1"
																}
															]
														}
													]
												},
												"name": "increment_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "369:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "379:3:1",
														"type": ""
													}
												],
												"src": "342:167:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "543:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "560:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "563:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "553:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "553:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "553:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "657:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "660:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "650:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "650:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "650:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "681:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "684:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "674:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "674:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "674:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "515:180:1"
											}
										]
									},
									"contents": "{\n\n    function checked_add_t_uint8(x, y) -> sum {\n        x := cleanup_t_uint8(x)\n        y := cleanup_t_uint8(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function increment_t_uint8(value) -> ret {\n        value := cleanup_t_uint8(value)\n        if eq(value, 0xff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100575760003560e01c8063091da0cf1461005c578063174c9c7e14610066578063e7c898ef14610070578063f0d3799c1461007a578063fc0e600814610084575b600080fd5b61006461008e565b005b61006e6100d9565b005b61007861010d565b005b610082610146565b005b61008c610192565b005b600080600190505b600b8160ff1610156100d5576001826100af91906101cb565b9150600a8260ff1611156100c2576100d5565b80806100cd9061020f565b915050610096565b5050565b600080600190505b6001826100ee91906101cb565b915080806100fb9061020f565b915050600b8160ff16106100e1575050565b600080600190505b600b8160ff16101561014257808261012d91906101cb565b9150808061013a9061020f565b915050610115565b5050565b600080600190505b600b8160ff16101561018e5760058160ff16141561016b5761017b565b60018261017891906101cb565b91505b80806101869061020f565b91505061014e565b5050565b600080600190505b600b8160ff1610156101c75780826101b291906101cb565b915080806101bf9061020f565b91505061019a565b5050565b60006101d682610202565b91506101e183610202565b92508260ff038211156101f7576101f6610239565b5b828201905092915050565b600060ff82169050919050565b600061021a82610202565b915060ff82141561022e5761022d610239565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fdfea26469706673582212205bdb0b66e6050f915648fec38dd9a4f988df9f93db09326d78126beb70dcac9f64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x91DA0CF EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x174C9C7E EQ PUSH2 0x66 JUMPI DUP1 PUSH4 0xE7C898EF EQ PUSH2 0x70 JUMPI DUP1 PUSH4 0xF0D3799C EQ PUSH2 0x7A JUMPI DUP1 PUSH4 0xFC0E6008 EQ PUSH2 0x84 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64 PUSH2 0x8E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6E PUSH2 0xD9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x78 PUSH2 0x10D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x82 PUSH2 0x146 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x8C PUSH2 0x192 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 POP JUMPDEST PUSH1 0xB DUP2 PUSH1 0xFF AND LT ISZERO PUSH2 0xD5 JUMPI PUSH1 0x1 DUP3 PUSH2 0xAF SWAP2 SWAP1 PUSH2 0x1CB JUMP JUMPDEST SWAP2 POP PUSH1 0xA DUP3 PUSH1 0xFF AND GT ISZERO PUSH2 0xC2 JUMPI PUSH2 0xD5 JUMP JUMPDEST DUP1 DUP1 PUSH2 0xCD SWAP1 PUSH2 0x20F JUMP JUMPDEST SWAP2 POP POP PUSH2 0x96 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 POP JUMPDEST PUSH1 0x1 DUP3 PUSH2 0xEE SWAP2 SWAP1 PUSH2 0x1CB JUMP JUMPDEST SWAP2 POP DUP1 DUP1 PUSH2 0xFB SWAP1 PUSH2 0x20F JUMP JUMPDEST SWAP2 POP POP PUSH1 0xB DUP2 PUSH1 0xFF AND LT PUSH2 0xE1 JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 POP JUMPDEST PUSH1 0xB DUP2 PUSH1 0xFF AND LT ISZERO PUSH2 0x142 JUMPI DUP1 DUP3 PUSH2 0x12D SWAP2 SWAP1 PUSH2 0x1CB JUMP JUMPDEST SWAP2 POP DUP1 DUP1 PUSH2 0x13A SWAP1 PUSH2 0x20F JUMP JUMPDEST SWAP2 POP POP PUSH2 0x115 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 POP JUMPDEST PUSH1 0xB DUP2 PUSH1 0xFF AND LT ISZERO PUSH2 0x18E JUMPI PUSH1 0x5 DUP2 PUSH1 0xFF AND EQ ISZERO PUSH2 0x16B JUMPI PUSH2 0x17B JUMP JUMPDEST PUSH1 0x1 DUP3 PUSH2 0x178 SWAP2 SWAP1 PUSH2 0x1CB JUMP JUMPDEST SWAP2 POP JUMPDEST DUP1 DUP1 PUSH2 0x186 SWAP1 PUSH2 0x20F JUMP JUMPDEST SWAP2 POP POP PUSH2 0x14E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 POP JUMPDEST PUSH1 0xB DUP2 PUSH1 0xFF AND LT ISZERO PUSH2 0x1C7 JUMPI DUP1 DUP3 PUSH2 0x1B2 SWAP2 SWAP1 PUSH2 0x1CB JUMP JUMPDEST SWAP2 POP DUP1 DUP1 PUSH2 0x1BF SWAP1 PUSH2 0x20F JUMP JUMPDEST SWAP2 POP POP PUSH2 0x19A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D6 DUP3 PUSH2 0x202 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E1 DUP4 PUSH2 0x202 JUMP JUMPDEST SWAP3 POP DUP3 PUSH1 0xFF SUB DUP3 GT ISZERO PUSH2 0x1F7 JUMPI PUSH2 0x1F6 PUSH2 0x239 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21A DUP3 PUSH2 0x202 JUMP JUMPDEST SWAP2 POP PUSH1 0xFF DUP3 EQ ISZERO PUSH2 0x22E JUMPI PUSH2 0x22D PUSH2 0x239 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMPDEST 0xDB SIGNEXTEND PUSH7 0xE6050F915648FE 0xC3 DUP14 0xD9 LOG4 0xF9 DUP9 0xDF SWAP16 SWAP4 0xDB MULMOD ORIGIN PUSH14 0x78126BEB70DCAC9F64736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "37:931:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;522:197;;;:::i;:::-;;354:160;;;:::i;:::-;;194:154;;;:::i;:::-;;731:226;;;:::i;:::-;;57:129;;;:::i;:::-;;522:197;560:9;588:7;596:1;588:9;;584:128;603:2;599:1;:6;;;584:128;;;633:1;626:8;;;;;:::i;:::-;;;658:2;654:3;:6;;;650:51;;;680:5;;650:51;607:3;;;;;:::i;:::-;;;;584:128;;;;549:170;522:197::o;354:160::-;394:9;418:7;428:1;418:11;;440:67;464:1;457:8;;;;;:::i;:::-;;;480:3;;;;;:::i;:::-;;;;503:2;501:1;:4;;;440:67;;383:131;;354:160::o;194:154::-;232:9;254:7;262:1;254:9;;274:65;282:2;280:1;:4;;;274:65;;;307:1;300:8;;;;;:::i;:::-;;;324:3;;;;;:::i;:::-;;;;274:65;;;221:127;;194:154::o;731:226::-;772:9;800:7;808:1;800:9;;796:154;815:2;811:1;:6;;;796:154;;;847:1;842;:6;;;838:77;;;868:8;;838:77;936:1;929:8;;;;;:::i;:::-;;;796:154;819:3;;;;;:::i;:::-;;;;796:154;;;;761:196;731:226::o;57:129::-;93:9;121:7;129:1;121:9;;117:62;136:2;132:1;:6;;;117:62;;;166:1;159:8;;;;;:::i;:::-;;;140:3;;;;;:::i;:::-;;;;117:62;;;;82:104;57:129::o;7:237:1:-;45:3;64:18;80:1;64:18;:::i;:::-;59:23;;96:18;112:1;96:18;:::i;:::-;91:23;;186:1;180:4;176:12;173:1;170:19;167:45;;;192:18;;:::i;:::-;167:45;236:1;233;229:9;222:16;;7:237;;;;:::o;250:86::-;285:7;325:4;318:5;314:16;303:27;;250:86;;;:::o;342:167::-;379:3;402:22;418:5;402:22;:::i;:::-;393:31;;446:4;439:5;436:15;433:41;;;454:18;;:::i;:::-;433:41;501:1;494:5;490:13;483:20;;342:167;;;:::o;515:180::-;563:77;560:1;553:88;660:4;657:1;650:15;684:4;681:1;674:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "134000",
								"executionCost": "177",
								"totalCost": "134177"
							},
							"external": {
								"doWhileLoop()": "infinite",
								"forLoop()": "infinite",
								"loopbreak()": "infinite",
								"loopcontinue()": "infinite",
								"whileLoop()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 37,
									"end": 968,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 37,
									"end": 968,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 37,
									"end": 968,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 37,
									"end": 968,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 37,
									"end": 968,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 37,
									"end": 968,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 37,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 37,
									"end": 968,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 37,
									"end": 968,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 37,
									"end": 968,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 37,
									"end": 968,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 37,
									"end": 968,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 37,
									"end": 968,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 37,
									"end": 968,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 37,
									"end": 968,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 37,
									"end": 968,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 37,
									"end": 968,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 37,
									"end": 968,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 37,
									"end": 968,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 37,
									"end": 968,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 37,
									"end": 968,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205bdb0b66e6050f915648fec38dd9a4f988df9f93db09326d78126beb70dcac9f64736f6c63430008070033",
									".code": [
										{
											"begin": 37,
											"end": 968,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 37,
											"end": 968,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37,
											"end": 968,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37,
											"end": 968,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 37,
											"end": 968,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37,
											"end": 968,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 37,
											"end": 968,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 37,
											"end": 968,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37,
											"end": 968,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37,
											"end": 968,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37,
											"end": 968,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 37,
											"end": 968,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 37,
											"end": 968,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37,
											"end": 968,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37,
											"end": 968,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 37,
											"end": 968,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 37,
											"end": 968,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 37,
											"end": 968,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 37,
											"end": 968,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37,
											"end": 968,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37,
											"end": 968,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 37,
											"end": 968,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 37,
											"end": 968,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 37,
											"end": 968,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37,
											"end": 968,
											"name": "PUSH",
											"source": 0,
											"value": "91DA0CF"
										},
										{
											"begin": 37,
											"end": 968,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 37,
											"end": 968,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 37,
											"end": 968,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37,
											"end": 968,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37,
											"end": 968,
											"name": "PUSH",
											"source": 0,
											"value": "174C9C7E"
										},
										{
											"begin": 37,
											"end": 968,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 37,
											"end": 968,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 37,
											"end": 968,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37,
											"end": 968,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37,
											"end": 968,
											"name": "PUSH",
											"source": 0,
											"value": "E7C898EF"
										},
										{
											"begin": 37,
											"end": 968,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 37,
											"end": 968,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 37,
											"end": 968,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37,
											"end": 968,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37,
											"end": 968,
											"name": "PUSH",
											"source": 0,
											"value": "F0D3799C"
										},
										{
											"begin": 37,
											"end": 968,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 37,
											"end": 968,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 37,
											"end": 968,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37,
											"end": 968,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37,
											"end": 968,
											"name": "PUSH",
											"source": 0,
											"value": "FC0E6008"
										},
										{
											"begin": 37,
											"end": 968,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 37,
											"end": 968,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 37,
											"end": 968,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37,
											"end": 968,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 37,
											"end": 968,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37,
											"end": 968,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37,
											"end": 968,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37,
											"end": 968,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 522,
											"end": 719,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 522,
											"end": 719,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 522,
											"end": 719,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 522,
											"end": 719,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 522,
											"end": 719,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 522,
											"end": 719,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 522,
											"end": 719,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 522,
											"end": 719,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 354,
											"end": 514,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 354,
											"end": 514,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 354,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 354,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 354,
											"end": 514,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 354,
											"end": 514,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 354,
											"end": 514,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 354,
											"end": 514,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 194,
											"end": 348,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 194,
											"end": 348,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 194,
											"end": 348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 194,
											"end": 348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 194,
											"end": 348,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 194,
											"end": 348,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 194,
											"end": 348,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 194,
											"end": 348,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 731,
											"end": 957,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 731,
											"end": 957,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 731,
											"end": 957,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 731,
											"end": 957,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 731,
											"end": 957,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 731,
											"end": 957,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 731,
											"end": 957,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 731,
											"end": 957,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 57,
											"end": 186,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 57,
											"end": 186,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57,
											"end": 186,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 57,
											"end": 186,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 57,
											"end": 186,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 57,
											"end": 186,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 57,
											"end": 186,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57,
											"end": 186,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 522,
											"end": 719,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 522,
											"end": 719,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 560,
											"end": 569,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 588,
											"end": 595,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 596,
											"end": 597,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 588,
											"end": 597,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 588,
											"end": 597,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 584,
											"end": 712,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 584,
											"end": 712,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 603,
											"end": 605,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 599,
											"end": 600,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 599,
											"end": 605,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 599,
											"end": 605,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 599,
											"end": 605,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 584,
											"end": 712,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 584,
											"end": 712,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 584,
											"end": 712,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 633,
											"end": 634,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 626,
											"end": 634,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 626,
											"end": 634,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 626,
											"end": 634,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 626,
											"end": 634,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 626,
											"end": 634,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 626,
											"end": 634,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 626,
											"end": 634,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 626,
											"end": 634,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 626,
											"end": 634,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 626,
											"end": 634,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 658,
											"end": 660,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 654,
											"end": 657,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 654,
											"end": 660,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 654,
											"end": 660,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 654,
											"end": 660,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 650,
											"end": 701,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 650,
											"end": 701,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 650,
											"end": 701,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 680,
											"end": 685,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 685,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 650,
											"end": 701,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 650,
											"end": 701,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 607,
											"end": 610,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 607,
											"end": 610,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 607,
											"end": 610,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 607,
											"end": 610,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 607,
											"end": 610,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 607,
											"end": 610,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 607,
											"end": 610,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 607,
											"end": 610,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 607,
											"end": 610,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 607,
											"end": 610,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 607,
											"end": 610,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 584,
											"end": 712,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 584,
											"end": 712,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 584,
											"end": 712,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 584,
											"end": 712,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 584,
											"end": 712,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 549,
											"end": 719,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 522,
											"end": 719,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 354,
											"end": 514,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 354,
											"end": 514,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 394,
											"end": 403,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 418,
											"end": 425,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 428,
											"end": 429,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 418,
											"end": 429,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 418,
											"end": 429,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 440,
											"end": 507,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 440,
											"end": 507,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 464,
											"end": 465,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 457,
											"end": 465,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 457,
											"end": 465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 457,
											"end": 465,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 457,
											"end": 465,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 457,
											"end": 465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 457,
											"end": 465,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 457,
											"end": 465,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 457,
											"end": 465,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 457,
											"end": 465,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 457,
											"end": 465,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 480,
											"end": 483,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 480,
											"end": 483,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 480,
											"end": 483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 480,
											"end": 483,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 480,
											"end": 483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 480,
											"end": 483,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 480,
											"end": 483,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 480,
											"end": 483,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 480,
											"end": 483,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 480,
											"end": 483,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 480,
											"end": 483,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 503,
											"end": 505,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 501,
											"end": 502,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 501,
											"end": 505,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 501,
											"end": 505,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 501,
											"end": 505,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 440,
											"end": 507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 440,
											"end": 507,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 383,
											"end": 514,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 383,
											"end": 514,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 354,
											"end": 514,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 194,
											"end": 348,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 194,
											"end": 348,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 232,
											"end": 241,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 254,
											"end": 261,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 262,
											"end": 263,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 254,
											"end": 263,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 254,
											"end": 263,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 274,
											"end": 339,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 274,
											"end": 339,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 282,
											"end": 284,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 280,
											"end": 281,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 280,
											"end": 284,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 280,
											"end": 284,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 280,
											"end": 284,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 274,
											"end": 339,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 274,
											"end": 339,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 274,
											"end": 339,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 307,
											"end": 308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 300,
											"end": 308,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 300,
											"end": 308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 300,
											"end": 308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 300,
											"end": 308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 300,
											"end": 308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 300,
											"end": 308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 300,
											"end": 308,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 300,
											"end": 308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 300,
											"end": 308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 300,
											"end": 308,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 324,
											"end": 327,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 324,
											"end": 327,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 324,
											"end": 327,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 324,
											"end": 327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 324,
											"end": 327,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 324,
											"end": 327,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 324,
											"end": 327,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 324,
											"end": 327,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 324,
											"end": 327,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 324,
											"end": 327,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 324,
											"end": 327,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 274,
											"end": 339,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 274,
											"end": 339,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 274,
											"end": 339,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 274,
											"end": 339,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 221,
											"end": 348,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 221,
											"end": 348,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 194,
											"end": 348,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 731,
											"end": 957,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 731,
											"end": 957,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 772,
											"end": 781,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 800,
											"end": 807,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 808,
											"end": 809,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 800,
											"end": 809,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 800,
											"end": 809,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 796,
											"end": 950,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 796,
											"end": 950,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 815,
											"end": 817,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 811,
											"end": 812,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 811,
											"end": 817,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 811,
											"end": 817,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 811,
											"end": 817,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 796,
											"end": 950,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 796,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 796,
											"end": 950,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 847,
											"end": 848,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 842,
											"end": 843,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 842,
											"end": 848,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 842,
											"end": 848,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 842,
											"end": 848,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 838,
											"end": 915,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 838,
											"end": 915,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 838,
											"end": 915,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 868,
											"end": 876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 868,
											"end": 876,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 838,
											"end": 915,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 838,
											"end": 915,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 936,
											"end": 937,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 929,
											"end": 937,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 929,
											"end": 937,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 929,
											"end": 937,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 929,
											"end": 937,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 929,
											"end": 937,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 929,
											"end": 937,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 929,
											"end": 937,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 929,
											"end": 937,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 929,
											"end": 937,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 929,
											"end": 937,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 796,
											"end": 950,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 796,
											"end": 950,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 819,
											"end": 822,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 819,
											"end": 822,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 819,
											"end": 822,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 819,
											"end": 822,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 819,
											"end": 822,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 819,
											"end": 822,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 819,
											"end": 822,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 819,
											"end": 822,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 819,
											"end": 822,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 819,
											"end": 822,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 819,
											"end": 822,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 796,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 796,
											"end": 950,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 796,
											"end": 950,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 796,
											"end": 950,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 796,
											"end": 950,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 761,
											"end": 957,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 731,
											"end": 957,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 57,
											"end": 186,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 57,
											"end": 186,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 93,
											"end": 102,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 121,
											"end": 128,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 129,
											"end": 130,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 121,
											"end": 130,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 121,
											"end": 130,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 117,
											"end": 179,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 117,
											"end": 179,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 136,
											"end": 138,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 132,
											"end": 133,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 132,
											"end": 138,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 132,
											"end": 138,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 132,
											"end": 138,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 117,
											"end": 179,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 117,
											"end": 179,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 117,
											"end": 179,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 166,
											"end": 167,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 159,
											"end": 167,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 159,
											"end": 167,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 159,
											"end": 167,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 159,
											"end": 167,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 159,
											"end": 167,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 159,
											"end": 167,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 159,
											"end": 167,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 159,
											"end": 167,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 159,
											"end": 167,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 159,
											"end": 167,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 140,
											"end": 143,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 140,
											"end": 143,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 140,
											"end": 143,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 140,
											"end": 143,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 140,
											"end": 143,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 140,
											"end": 143,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 140,
											"end": 143,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 140,
											"end": 143,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 140,
											"end": 143,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 140,
											"end": 143,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 140,
											"end": 143,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 117,
											"end": 179,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 117,
											"end": 179,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 117,
											"end": 179,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 117,
											"end": 179,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 117,
											"end": 179,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 82,
											"end": 186,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57,
											"end": 186,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 244,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 7,
											"end": 244,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 45,
											"end": 48,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 64,
											"end": 82,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 64,
											"end": 82,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 64,
											"end": 82,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 64,
											"end": 82,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 64,
											"end": 82,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 59,
											"end": 82,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 59,
											"end": 82,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 96,
											"end": 114,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 112,
											"end": 113,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 96,
											"end": 114,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 96,
											"end": 114,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 96,
											"end": 114,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 96,
											"end": 114,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 91,
											"end": 114,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 91,
											"end": 114,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 186,
											"end": 187,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 180,
											"end": 184,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 176,
											"end": 188,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 173,
											"end": 174,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 170,
											"end": 189,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 167,
											"end": 212,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 167,
											"end": 212,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 167,
											"end": 212,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 192,
											"end": 210,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 192,
											"end": 210,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 192,
											"end": 210,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 192,
											"end": 210,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 192,
											"end": 210,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 167,
											"end": 212,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 167,
											"end": 212,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 236,
											"end": 237,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 233,
											"end": 234,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 229,
											"end": 238,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 222,
											"end": 238,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 222,
											"end": 238,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 244,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7,
											"end": 244,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 244,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 244,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 244,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 250,
											"end": 336,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 250,
											"end": 336,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 285,
											"end": 292,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 325,
											"end": 329,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 318,
											"end": 323,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 314,
											"end": 330,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 303,
											"end": 330,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 303,
											"end": 330,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 250,
											"end": 336,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 250,
											"end": 336,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 250,
											"end": 336,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 250,
											"end": 336,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 342,
											"end": 509,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 342,
											"end": 509,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 379,
											"end": 382,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 402,
											"end": 424,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 418,
											"end": 423,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 402,
											"end": 424,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 402,
											"end": 424,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 402,
											"end": 424,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 402,
											"end": 424,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 393,
											"end": 424,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 393,
											"end": 424,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 446,
											"end": 450,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 439,
											"end": 444,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 436,
											"end": 451,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 433,
											"end": 474,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 433,
											"end": 474,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 433,
											"end": 474,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 454,
											"end": 472,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 454,
											"end": 472,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 454,
											"end": 472,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 454,
											"end": 472,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 454,
											"end": 472,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 433,
											"end": 474,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 433,
											"end": 474,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 501,
											"end": 502,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 494,
											"end": 499,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 490,
											"end": 503,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 483,
											"end": 503,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 483,
											"end": 503,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 342,
											"end": 509,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 342,
											"end": 509,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 342,
											"end": 509,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 342,
											"end": 509,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 515,
											"end": 695,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 515,
											"end": 695,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 563,
											"end": 640,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 560,
											"end": 561,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 553,
											"end": 641,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 660,
											"end": 664,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 657,
											"end": 658,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 650,
											"end": 665,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 684,
											"end": 688,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 681,
											"end": 682,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 674,
											"end": 689,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"doWhileLoop()": "174c9c7e",
							"forLoop()": "fc0e6008",
							"loopbreak()": "091da0cf",
							"loopcontinue()": "f0d3799c",
							"whileLoop()": "e7c898ef"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"doWhileLoop\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"forLoop\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"loopbreak\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"loopcontinue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"whileLoop\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/Loop.sol\":\"Loop\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"test/Loop.sol\":{\"keccak256\":\"0x07c6272b937bb58f26bbf9d7627b0f3e88529aacb58e246a7099565134aecba1\",\"urls\":[\"bzz-raw://afb840e6b8feeb6a3730b7bd0ba155b99847b10291aec0d0811e4b367c4ab982\",\"dweb:/ipfs/QmUquxBoBeMiTL59zziSuAgBF8jZUtYJVAu1oq7oErZYeG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> test/Loop.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "test/Loop.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2018",
				"formattedMessage": "Warning: Function state mutability can be restricted to pure\n --> test/Loop.sol:5:5:\n  |\n5 |     function forLoop() public{\n  |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Function state mutability can be restricted to pure",
				"severity": "warning",
				"sourceLocation": {
					"end": 186,
					"file": "test/Loop.sol",
					"start": 57
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2018",
				"formattedMessage": "Warning: Function state mutability can be restricted to pure\n  --> test/Loop.sol:12:5:\n   |\n12 |     function whileLoop() public{\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Function state mutability can be restricted to pure",
				"severity": "warning",
				"sourceLocation": {
					"end": 348,
					"file": "test/Loop.sol",
					"start": 194
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2018",
				"formattedMessage": "Warning: Function state mutability can be restricted to pure\n  --> test/Loop.sol:21:5:\n   |\n21 |     function doWhileLoop() public{\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Function state mutability can be restricted to pure",
				"severity": "warning",
				"sourceLocation": {
					"end": 514,
					"file": "test/Loop.sol",
					"start": 354
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2018",
				"formattedMessage": "Warning: Function state mutability can be restricted to pure\n  --> test/Loop.sol:30:5:\n   |\n30 |     function loopbreak() public{\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Function state mutability can be restricted to pure",
				"severity": "warning",
				"sourceLocation": {
					"end": 719,
					"file": "test/Loop.sol",
					"start": 522
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2018",
				"formattedMessage": "Warning: Function state mutability can be restricted to pure\n  --> test/Loop.sol:42:5:\n   |\n42 |     function loopcontinue() public{\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Function state mutability can be restricted to pure",
				"severity": "warning",
				"sourceLocation": {
					"end": 957,
					"file": "test/Loop.sol",
					"start": 731
				},
				"type": "Warning"
			}
		],
		"sources": {
			"test/Loop.sol": {
				"ast": {
					"absolutePath": "test/Loop.sol",
					"exportedSymbols": {
						"Loop": [
							134
						]
					},
					"id": 135,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:31:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 134,
							"linearizedBaseContracts": [
								134
							],
							"name": "Loop",
							"nameLocation": "46:4:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 24,
										"nodeType": "Block",
										"src": "82:104:0",
										"statements": [
											{
												"assignments": [
													5
												],
												"declarations": [
													{
														"constant": false,
														"id": 5,
														"mutability": "mutable",
														"name": "sum",
														"nameLocation": "99:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 24,
														"src": "93:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 4,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "93:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 7,
												"initialValue": {
													"hexValue": "30",
													"id": 6,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "105:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "93:13:0"
											},
											{
												"body": {
													"id": 22,
													"nodeType": "Block",
													"src": "144:35:0",
													"statements": [
														{
															"expression": {
																"id": 20,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 18,
																	"name": "sum",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 5,
																	"src": "159:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 19,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 9,
																	"src": "166:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "159:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 21,
															"nodeType": "ExpressionStatement",
															"src": "159:8:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 14,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 12,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "132:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "3131",
														"id": 13,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "136:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_11_by_1",
															"typeString": "int_const 11"
														},
														"value": "11"
													},
													"src": "132:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 23,
												"initializationExpression": {
													"assignments": [
														9
													],
													"declarations": [
														{
															"constant": false,
															"id": 9,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "127:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 23,
															"src": "121:7:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															"typeName": {
																"id": 8,
																"name": "uint8",
																"nodeType": "ElementaryTypeName",
																"src": "121:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 11,
													"initialValue": {
														"hexValue": "31",
														"id": 10,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "129:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "121:9:0"
												},
												"loopExpression": {
													"expression": {
														"id": 16,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "140:3:0",
														"subExpression": {
															"id": 15,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 9,
															"src": "140:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"id": 17,
													"nodeType": "ExpressionStatement",
													"src": "140:3:0"
												},
												"nodeType": "ForStatement",
												"src": "117:62:0"
											}
										]
									},
									"functionSelector": "fc0e6008",
									"id": 25,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forLoop",
									"nameLocation": "66:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "73:2:0"
									},
									"returnParameters": {
										"id": 3,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "82:0:0"
									},
									"scope": 134,
									"src": "57:129:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 48,
										"nodeType": "Block",
										"src": "221:127:0",
										"statements": [
											{
												"assignments": [
													29
												],
												"declarations": [
													{
														"constant": false,
														"id": 29,
														"mutability": "mutable",
														"name": "sum",
														"nameLocation": "238:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 48,
														"src": "232:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 28,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "232:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 31,
												"initialValue": {
													"hexValue": "30",
													"id": 30,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "242:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "232:11:0"
											},
											{
												"assignments": [
													33
												],
												"declarations": [
													{
														"constant": false,
														"id": 33,
														"mutability": "mutable",
														"name": "i",
														"nameLocation": "260:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 48,
														"src": "254:7:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 32,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "254:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 35,
												"initialValue": {
													"hexValue": "31",
													"id": 34,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "262:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1_by_1",
														"typeString": "int_const 1"
													},
													"value": "1"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "254:9:0"
											},
											{
												"body": {
													"id": 46,
													"nodeType": "Block",
													"src": "285:54:0",
													"statements": [
														{
															"expression": {
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 39,
																	"name": "sum",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 29,
																	"src": "300:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 40,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 33,
																	"src": "307:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "300:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 42,
															"nodeType": "ExpressionStatement",
															"src": "300:8:0"
														},
														{
															"expression": {
																"id": 44,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "324:3:0",
																"subExpression": {
																	"id": 43,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 33,
																	"src": "324:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 45,
															"nodeType": "ExpressionStatement",
															"src": "324:3:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 38,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 36,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 33,
														"src": "280:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "3131",
														"id": 37,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "282:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_11_by_1",
															"typeString": "int_const 11"
														},
														"value": "11"
													},
													"src": "280:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 47,
												"nodeType": "WhileStatement",
												"src": "274:65:0"
											}
										]
									},
									"functionSelector": "e7c898ef",
									"id": 49,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "whileLoop",
									"nameLocation": "203:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "212:2:0"
									},
									"returnParameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "221:0:0"
									},
									"scope": 134,
									"src": "194:154:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 72,
										"nodeType": "Block",
										"src": "383:131:0",
										"statements": [
											{
												"assignments": [
													53
												],
												"declarations": [
													{
														"constant": false,
														"id": 53,
														"mutability": "mutable",
														"name": "sum",
														"nameLocation": "400:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 72,
														"src": "394:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 52,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "394:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 55,
												"initialValue": {
													"hexValue": "30",
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "406:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "394:13:0"
											},
											{
												"assignments": [
													57
												],
												"declarations": [
													{
														"constant": false,
														"id": 57,
														"mutability": "mutable",
														"name": "i",
														"nameLocation": "424:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 72,
														"src": "418:7:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 56,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "418:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 59,
												"initialValue": {
													"hexValue": "31",
													"id": 58,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "428:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1_by_1",
														"typeString": "int_const 1"
													},
													"value": "1"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "418:11:0"
											},
											{
												"body": {
													"id": 67,
													"nodeType": "Block",
													"src": "442:53:0",
													"statements": [
														{
															"expression": {
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 60,
																	"name": "sum",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 53,
																	"src": "457:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 61,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "464:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "457:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 63,
															"nodeType": "ExpressionStatement",
															"src": "457:8:0"
														},
														{
															"expression": {
																"id": 65,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "480:3:0",
																"subExpression": {
																	"id": 64,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 57,
																	"src": "480:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 66,
															"nodeType": "ExpressionStatement",
															"src": "480:3:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 70,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 68,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 57,
														"src": "501:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "3131",
														"id": 69,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "503:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_11_by_1",
															"typeString": "int_const 11"
														},
														"value": "11"
													},
													"src": "501:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 71,
												"nodeType": "DoWhileStatement",
												"src": "440:67:0"
											}
										]
									},
									"functionSelector": "174c9c7e",
									"id": 73,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "doWhileLoop",
									"nameLocation": "363:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "374:2:0"
									},
									"returnParameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "383:0:0"
									},
									"scope": 134,
									"src": "354:160:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 102,
										"nodeType": "Block",
										"src": "549:170:0",
										"statements": [
											{
												"assignments": [
													77
												],
												"declarations": [
													{
														"constant": false,
														"id": 77,
														"mutability": "mutable",
														"name": "sum",
														"nameLocation": "566:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 102,
														"src": "560:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 76,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "560:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 79,
												"initialValue": {
													"hexValue": "30",
													"id": 78,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "572:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "560:13:0"
											},
											{
												"body": {
													"id": 100,
													"nodeType": "Block",
													"src": "611:101:0",
													"statements": [
														{
															"expression": {
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 90,
																	"name": "sum",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 77,
																	"src": "626:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 91,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "633:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "626:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 93,
															"nodeType": "ExpressionStatement",
															"src": "626:8:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"id": 96,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 94,
																	"name": "sum",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 77,
																	"src": "654:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "3130",
																	"id": 95,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "658:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "654:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 99,
															"nodeType": "IfStatement",
															"src": "650:51:0",
															"trueBody": {
																"id": 98,
																"nodeType": "Block",
																"src": "661:40:0",
																"statements": [
																	{
																		"id": 97,
																		"nodeType": "Break",
																		"src": "680:5:0"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 86,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 84,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 81,
														"src": "599:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "3131",
														"id": 85,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "603:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_11_by_1",
															"typeString": "int_const 11"
														},
														"value": "11"
													},
													"src": "599:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 101,
												"initializationExpression": {
													"assignments": [
														81
													],
													"declarations": [
														{
															"constant": false,
															"id": 81,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "594:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 101,
															"src": "588:7:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															"typeName": {
																"id": 80,
																"name": "uint8",
																"nodeType": "ElementaryTypeName",
																"src": "588:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 83,
													"initialValue": {
														"hexValue": "31",
														"id": 82,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "596:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "588:9:0"
												},
												"loopExpression": {
													"expression": {
														"id": 88,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "607:3:0",
														"subExpression": {
															"id": 87,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 81,
															"src": "607:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"id": 89,
													"nodeType": "ExpressionStatement",
													"src": "607:3:0"
												},
												"nodeType": "ForStatement",
												"src": "584:128:0"
											}
										]
									},
									"functionSelector": "091da0cf",
									"id": 103,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "loopbreak",
									"nameLocation": "531:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 74,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "540:2:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "549:0:0"
									},
									"scope": 134,
									"src": "522:197:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 132,
										"nodeType": "Block",
										"src": "761:196:0",
										"statements": [
											{
												"assignments": [
													107
												],
												"declarations": [
													{
														"constant": false,
														"id": 107,
														"mutability": "mutable",
														"name": "sum",
														"nameLocation": "778:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 132,
														"src": "772:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 106,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "772:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 109,
												"initialValue": {
													"hexValue": "30",
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "784:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "772:13:0"
											},
											{
												"body": {
													"id": 130,
													"nodeType": "Block",
													"src": "823:127:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"id": 122,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 120,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 111,
																	"src": "842:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "35",
																	"id": 121,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "847:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_5_by_1",
																		"typeString": "int_const 5"
																	},
																	"value": "5"
																},
																"src": "842:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 125,
															"nodeType": "IfStatement",
															"src": "838:77:0",
															"trueBody": {
																"id": 124,
																"nodeType": "Block",
																"src": "849:66:0",
																"statements": [
																	{
																		"id": 123,
																		"nodeType": "Continue",
																		"src": "868:8:0"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 128,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 126,
																	"name": "sum",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 107,
																	"src": "929:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 127,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "936:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "929:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 129,
															"nodeType": "ExpressionStatement",
															"src": "929:8:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 116,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 114,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "811:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "3131",
														"id": 115,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "815:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_11_by_1",
															"typeString": "int_const 11"
														},
														"value": "11"
													},
													"src": "811:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 131,
												"initializationExpression": {
													"assignments": [
														111
													],
													"declarations": [
														{
															"constant": false,
															"id": 111,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "806:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 131,
															"src": "800:7:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															"typeName": {
																"id": 110,
																"name": "uint8",
																"nodeType": "ElementaryTypeName",
																"src": "800:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 113,
													"initialValue": {
														"hexValue": "31",
														"id": 112,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "808:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "800:9:0"
												},
												"loopExpression": {
													"expression": {
														"id": 118,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "819:3:0",
														"subExpression": {
															"id": 117,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 111,
															"src": "819:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"id": 119,
													"nodeType": "ExpressionStatement",
													"src": "819:3:0"
												},
												"nodeType": "ForStatement",
												"src": "796:154:0"
											}
										]
									},
									"functionSelector": "f0d3799c",
									"id": 133,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "loopcontinue",
									"nameLocation": "740:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 104,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "752:2:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "761:0:0"
									},
									"scope": 134,
									"src": "731:226:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 135,
							"src": "37:931:0",
							"usedErrors": []
						}
					],
					"src": "0:968:0"
				},
				"id": 0
			}
		}
	}
}