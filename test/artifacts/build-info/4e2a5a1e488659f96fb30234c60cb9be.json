{
	"id": "4e2a5a1e488659f96fb30234c60cb9be",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"test/BlockProperty2.sol": {
				"content": "pragma solidity >=0.8.0 <0.9.0;\r\n\r\ncontract BlockPropertynew{\r\n    // 랜덤값 만들기\r\n    function generateRandom() public view returns(uint8){\r\n        uint8 number = uint8(uint256(keccak256(abi.encodePacked(block.timestamp, block.difficulty)))%251);\r\n        //keccak256 해싱\r\n        //abi.encodePacked 해싱을 위한 바이트값 변환\r\n        return number;\r\n    }\r\n\r\n\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"test/BlockProperty2.sol": {
				"BlockPropertynew": {
					"abi": [
						{
							"inputs": [],
							"name": "generateRandom",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"test/BlockProperty2.sol\":35:387  contract BlockPropertynew{\r... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"test/BlockProperty2.sol\":35:387  contract BlockPropertynew{\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x02e4af01\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"test/BlockProperty2.sol\":95:380  function generateRandom() public view returns(uint8){\r... */\n    tag_3:\n      tag_4\n      tag_5\n      jump\t// in\n    tag_4:\n      mload(0x40)\n      tag_6\n      swap2\n      swap1\n      tag_7\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_5:\n        /* \"test/BlockProperty2.sol\":141:146  uint8 */\n      0x00\n        /* \"test/BlockProperty2.sol\":158:170  uint8 number */\n      dup1\n        /* \"test/BlockProperty2.sol\":251:254  251 */\n      0xfb\n        /* \"test/BlockProperty2.sol\":214:229  block.timestamp */\n      timestamp\n        /* \"test/BlockProperty2.sol\":231:247  block.difficulty */\n      difficulty\n        /* \"test/BlockProperty2.sol\":197:248  abi.encodePacked(block.timestamp, block.difficulty) */\n      add(0x20, mload(0x40))\n      tag_9\n      swap3\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"test/BlockProperty2.sol\":187:249  keccak256(abi.encodePacked(block.timestamp, block.difficulty)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"test/BlockProperty2.sol\":179:250  uint256(keccak256(abi.encodePacked(block.timestamp, block.difficulty))) */\n      0x00\n      shr\n        /* \"test/BlockProperty2.sol\":179:254  uint256(keccak256(abi.encodePacked(block.timestamp, block.difficulty)))%251 */\n      tag_11\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_11:\n        /* \"test/BlockProperty2.sol\":158:255  uint8 number = uint8(uint256(keccak256(abi.encodePacked(block.timestamp, block.difficulty)))%251) */\n      swap1\n      pop\n        /* \"test/BlockProperty2.sol\":366:372  number */\n      dup1\n        /* \"test/BlockProperty2.sol\":359:372  return number */\n      swap2\n      pop\n      pop\n        /* \"test/BlockProperty2.sol\":95:380  function generateRandom() public view returns(uint8){\r... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:164   */\n    tag_14:\n        /* \"#utility.yul\":112:157   */\n      tag_16\n        /* \"#utility.yul\":132:156   */\n      tag_17\n        /* \"#utility.yul\":150:155   */\n      dup3\n        /* \"#utility.yul\":132:156   */\n      tag_18\n      jump\t// in\n    tag_17:\n        /* \"#utility.yul\":112:157   */\n      tag_19\n      jump\t// in\n    tag_16:\n        /* \"#utility.yul\":107:110   */\n      dup3\n        /* \"#utility.yul\":100:158   */\n      mstore\n        /* \"#utility.yul\":7:164   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":170:282   */\n    tag_20:\n        /* \"#utility.yul\":253:275   */\n      tag_22\n        /* \"#utility.yul\":269:274   */\n      dup2\n        /* \"#utility.yul\":253:275   */\n      tag_23\n      jump\t// in\n    tag_22:\n        /* \"#utility.yul\":248:251   */\n      dup3\n        /* \"#utility.yul\":241:276   */\n      mstore\n        /* \"#utility.yul\":170:282   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":288:685   */\n    tag_10:\n        /* \"#utility.yul\":428:431   */\n      0x00\n        /* \"#utility.yul\":443:518   */\n      tag_25\n        /* \"#utility.yul\":514:517   */\n      dup3\n        /* \"#utility.yul\":505:511   */\n      dup6\n        /* \"#utility.yul\":443:518   */\n      tag_14\n      jump\t// in\n    tag_25:\n        /* \"#utility.yul\":543:545   */\n      0x20\n        /* \"#utility.yul\":538:541   */\n      dup3\n        /* \"#utility.yul\":534:546   */\n      add\n        /* \"#utility.yul\":527:546   */\n      swap2\n      pop\n        /* \"#utility.yul\":556:631   */\n      tag_26\n        /* \"#utility.yul\":627:630   */\n      dup3\n        /* \"#utility.yul\":618:624   */\n      dup5\n        /* \"#utility.yul\":556:631   */\n      tag_14\n      jump\t// in\n    tag_26:\n        /* \"#utility.yul\":656:658   */\n      0x20\n        /* \"#utility.yul\":651:654   */\n      dup3\n        /* \"#utility.yul\":647:659   */\n      add\n        /* \"#utility.yul\":640:659   */\n      swap2\n      pop\n        /* \"#utility.yul\":676:679   */\n      dup2\n        /* \"#utility.yul\":669:679   */\n      swap1\n      pop\n        /* \"#utility.yul\":288:685   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":691:905   */\n    tag_7:\n        /* \"#utility.yul\":780:784   */\n      0x00\n        /* \"#utility.yul\":818:820   */\n      0x20\n        /* \"#utility.yul\":807:816   */\n      dup3\n        /* \"#utility.yul\":803:821   */\n      add\n        /* \"#utility.yul\":795:821   */\n      swap1\n      pop\n        /* \"#utility.yul\":831:898   */\n      tag_28\n        /* \"#utility.yul\":895:896   */\n      0x00\n        /* \"#utility.yul\":884:893   */\n      dup4\n        /* \"#utility.yul\":880:897   */\n      add\n        /* \"#utility.yul\":871:877   */\n      dup5\n        /* \"#utility.yul\":831:898   */\n      tag_20\n      jump\t// in\n    tag_28:\n        /* \"#utility.yul\":691:905   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":911:988   */\n    tag_18:\n        /* \"#utility.yul\":948:955   */\n      0x00\n        /* \"#utility.yul\":977:982   */\n      dup2\n        /* \"#utility.yul\":966:982   */\n      swap1\n      pop\n        /* \"#utility.yul\":911:988   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":994:1080   */\n    tag_23:\n        /* \"#utility.yul\":1029:1036   */\n      0x00\n        /* \"#utility.yul\":1069:1073   */\n      0xff\n        /* \"#utility.yul\":1062:1067   */\n      dup3\n        /* \"#utility.yul\":1058:1074   */\n      and\n        /* \"#utility.yul\":1047:1074   */\n      swap1\n      pop\n        /* \"#utility.yul\":994:1080   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1086:1165   */\n    tag_19:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1154:1159   */\n      dup2\n        /* \"#utility.yul\":1143:1159   */\n      swap1\n      pop\n        /* \"#utility.yul\":1086:1165   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1171:1347   */\n    tag_12:\n        /* \"#utility.yul\":1203:1204   */\n      0x00\n        /* \"#utility.yul\":1220:1240   */\n      tag_33\n        /* \"#utility.yul\":1238:1239   */\n      dup3\n        /* \"#utility.yul\":1220:1240   */\n      tag_18\n      jump\t// in\n    tag_33:\n        /* \"#utility.yul\":1215:1240   */\n      swap2\n      pop\n        /* \"#utility.yul\":1254:1274   */\n      tag_34\n        /* \"#utility.yul\":1272:1273   */\n      dup4\n        /* \"#utility.yul\":1254:1274   */\n      tag_18\n      jump\t// in\n    tag_34:\n        /* \"#utility.yul\":1249:1274   */\n      swap3\n      pop\n        /* \"#utility.yul\":1293:1294   */\n      dup3\n        /* \"#utility.yul\":1283:1318   */\n      tag_35\n      jumpi\n        /* \"#utility.yul\":1298:1316   */\n      tag_36\n      tag_37\n      jump\t// in\n    tag_36:\n        /* \"#utility.yul\":1283:1318   */\n    tag_35:\n        /* \"#utility.yul\":1339:1340   */\n      dup3\n        /* \"#utility.yul\":1336:1337   */\n      dup3\n        /* \"#utility.yul\":1332:1341   */\n      mod\n        /* \"#utility.yul\":1327:1341   */\n      swap1\n      pop\n        /* \"#utility.yul\":1171:1347   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1353:1533   */\n    tag_37:\n        /* \"#utility.yul\":1401:1478   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1398:1399   */\n      0x00\n        /* \"#utility.yul\":1391:1479   */\n      mstore\n        /* \"#utility.yul\":1498:1502   */\n      0x12\n        /* \"#utility.yul\":1495:1496   */\n      0x04\n        /* \"#utility.yul\":1488:1503   */\n      mstore\n        /* \"#utility.yul\":1522:1526   */\n      0x24\n        /* \"#utility.yul\":1519:1520   */\n      0x00\n        /* \"#utility.yul\":1512:1527   */\n      revert\n\n    auxdata: 0xa2646970667358221220b06b7c19106fac9c7cd3e24039b1bf5a328596eab4009d1ea61eced28900cee464736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506101b6806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806302e4af0114610030575b600080fd5b61003861004e565b60405161004591906100e4565b60405180910390f35b60008060fb42446040516020016100669291906100b8565b6040516020818303038152906040528051906020012060001c6100899190610120565b90508091505090565b6100a361009e826100ff565b610116565b82525050565b6100b281610109565b82525050565b60006100c48285610092565b6020820191506100d48284610092565b6020820191508190509392505050565b60006020820190506100f960008301846100a9565b92915050565b6000819050919050565b600060ff82169050919050565b6000819050919050565b600061012b826100ff565b9150610136836100ff565b92508261014657610145610151565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fdfea2646970667358221220b06b7c19106fac9c7cd3e24039b1bf5a328596eab4009d1ea61eced28900cee464736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B6 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2E4AF01 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x38 PUSH2 0x4E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x45 SWAP2 SWAP1 PUSH2 0xE4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xFB TIMESTAMP DIFFICULTY PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x66 SWAP3 SWAP2 SWAP1 PUSH2 0xB8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR PUSH2 0x89 SWAP2 SWAP1 PUSH2 0x120 JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0xA3 PUSH2 0x9E DUP3 PUSH2 0xFF JUMP JUMPDEST PUSH2 0x116 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xB2 DUP2 PUSH2 0x109 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC4 DUP3 DUP6 PUSH2 0x92 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0xD4 DUP3 DUP5 PUSH2 0x92 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xA9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12B DUP3 PUSH2 0xFF JUMP JUMPDEST SWAP2 POP PUSH2 0x136 DUP4 PUSH2 0xFF JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x146 JUMPI PUSH2 0x145 PUSH2 0x151 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB0 PUSH12 0x7C19106FAC9C7CD3E24039B1 0xBF GAS ORIGIN DUP6 SWAP7 0xEA 0xB4 STOP SWAP14 0x1E 0xA6 0x1E 0xCE 0xD2 DUP10 STOP 0xCE 0xE4 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "35:352:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@generateRandom_29": {
									"entryPoint": 78,
									"id": 29,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack": {
									"entryPoint": 146,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 169,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_uint256_t_uint256__to_t_uint256_t_uint256__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 184,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 228,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 255,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 265,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"leftAlign_t_uint256": {
									"entryPoint": 278,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mod_t_uint256": {
									"entryPoint": 288,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x12": {
									"entryPoint": 337,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1536:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "90:74:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "107:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "150:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "132:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "132:24:1"
																			}
																		],
																		"functionName": {
																			"name": "leftAlign_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "112:19:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "112:45:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "100:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "100:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "100:58:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "78:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "85:3:1",
														"type": ""
													}
												],
												"src": "7:157:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "231:51:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "248:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "269:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "253:15:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "253:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "241:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "241:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "241:35:1"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "219:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "226:3:1",
														"type": ""
													}
												],
												"src": "170:112:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "432:253:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "505:6:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "514:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "443:61:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "443:75:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "443:75:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "527:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "538:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "543:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "534:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "534:12:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "527:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "618:6:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "627:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "556:61:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "556:75:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "556:75:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "640:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "651:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "656:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "647:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "647:12:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "640:3:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "669:10:1",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "676:3:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "669:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_uint256_t_uint256__to_t_uint256_t_uint256__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "403:3:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "409:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "417:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "428:3:1",
														"type": ""
													}
												],
												"src": "288:397:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "785:120:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "795:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "807:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "818:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "803:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "803:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "795:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "871:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "884:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "895:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "880:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "880:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "831:39:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "831:67:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "831:67:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "757:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "769:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "780:4:1",
														"type": ""
													}
												],
												"src": "691:214:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "956:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "966:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "977:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "966:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "938:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "948:7:1",
														"type": ""
													}
												],
												"src": "911:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1037:43:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1047:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1062:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1069:4:1",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1058:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1058:16:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1047:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1019:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1029:7:1",
														"type": ""
													}
												],
												"src": "994:86:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1133:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1143:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1154:5:1"
															},
															"variableNames": [
																{
																	"name": "aligned",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:1"
																}
															]
														}
													]
												},
												"name": "leftAlign_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1115:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "aligned",
														"nodeType": "YulTypedName",
														"src": "1125:7:1",
														"type": ""
													}
												],
												"src": "1086:79:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1205:142:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1215:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1238:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1220:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1220:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "1215:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1249:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1272:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1254:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1254:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "1249:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1296:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "1298:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1298:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1298:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1293:1:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1286:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1286:9:1"
															},
															"nodeType": "YulIf",
															"src": "1283:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1327:14:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1336:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1339:1:1"
																	}
																],
																"functionName": {
																	"name": "mod",
																	"nodeType": "YulIdentifier",
																	"src": "1332:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1332:9:1"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "1327:1:1"
																}
															]
														}
													]
												},
												"name": "mod_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "1194:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "1197:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "1203:1:1",
														"type": ""
													}
												],
												"src": "1171:176:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1381:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1398:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1401:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1391:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1391:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1391:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1495:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1498:4:1",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1488:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1488:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1488:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1519:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1522:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1512:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1512:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1512:15:1"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "1353:180:1"
											}
										]
									},
									"contents": "{\n\n    function abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_uint256(cleanup_t_uint256(value)))\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_packed_t_uint256_t_uint256__to_t_uint256_t_uint256__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 32)\n\n        abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value1,  pos)\n        pos := add(pos, 32)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function leftAlign_t_uint256(value) -> aligned {\n        aligned := value\n    }\n\n    function mod_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061002b5760003560e01c806302e4af0114610030575b600080fd5b61003861004e565b60405161004591906100e4565b60405180910390f35b60008060fb42446040516020016100669291906100b8565b6040516020818303038152906040528051906020012060001c6100899190610120565b90508091505090565b6100a361009e826100ff565b610116565b82525050565b6100b281610109565b82525050565b60006100c48285610092565b6020820191506100d48284610092565b6020820191508190509392505050565b60006020820190506100f960008301846100a9565b92915050565b6000819050919050565b600060ff82169050919050565b6000819050919050565b600061012b826100ff565b9150610136836100ff565b92508261014657610145610151565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fdfea2646970667358221220b06b7c19106fac9c7cd3e24039b1bf5a328596eab4009d1ea61eced28900cee464736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2E4AF01 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x38 PUSH2 0x4E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x45 SWAP2 SWAP1 PUSH2 0xE4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xFB TIMESTAMP DIFFICULTY PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x66 SWAP3 SWAP2 SWAP1 PUSH2 0xB8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR PUSH2 0x89 SWAP2 SWAP1 PUSH2 0x120 JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0xA3 PUSH2 0x9E DUP3 PUSH2 0xFF JUMP JUMPDEST PUSH2 0x116 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xB2 DUP2 PUSH2 0x109 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC4 DUP3 DUP6 PUSH2 0x92 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0xD4 DUP3 DUP5 PUSH2 0x92 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xA9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12B DUP3 PUSH2 0xFF JUMP JUMPDEST SWAP2 POP PUSH2 0x136 DUP4 PUSH2 0xFF JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x146 JUMPI PUSH2 0x145 PUSH2 0x151 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB0 PUSH12 0x7C19106FAC9C7CD3E24039B1 0xBF GAS ORIGIN DUP6 SWAP7 0xEA 0xB4 STOP SWAP14 0x1E 0xA6 0x1E 0xCE 0xD2 DUP10 STOP 0xCE 0xE4 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "35:352:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;95:285;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;141:5;158:12;251:3;214:15;231:16;197:51;;;;;;;;;:::i;:::-;;;;;;;;;;;;;187:62;;;;;;179:71;;:75;;;;:::i;:::-;158:97;;366:6;359:13;;;95:285;:::o;7:157:1:-;112:45;132:24;150:5;132:24;:::i;:::-;112:45;:::i;:::-;107:3;100:58;7:157;;:::o;170:112::-;253:22;269:5;253:22;:::i;:::-;248:3;241:35;170:112;;:::o;288:397::-;428:3;443:75;514:3;505:6;443:75;:::i;:::-;543:2;538:3;534:12;527:19;;556:75;627:3;618:6;556:75;:::i;:::-;656:2;651:3;647:12;640:19;;676:3;669:10;;288:397;;;;;:::o;691:214::-;780:4;818:2;807:9;803:18;795:26;;831:67;895:1;884:9;880:17;871:6;831:67;:::i;:::-;691:214;;;;:::o;911:77::-;948:7;977:5;966:16;;911:77;;;:::o;994:86::-;1029:7;1069:4;1062:5;1058:16;1047:27;;994:86;;;:::o;1086:79::-;1125:7;1154:5;1143:16;;1086:79;;;:::o;1171:176::-;1203:1;1220:20;1238:1;1220:20;:::i;:::-;1215:25;;1254:20;1272:1;1254:20;:::i;:::-;1249:25;;1293:1;1283:35;;1298:18;;:::i;:::-;1283:35;1339:1;1336;1332:9;1327:14;;1171:176;;;;:::o;1353:180::-;1401:77;1398:1;1391:88;1498:4;1495:1;1488:15;1522:4;1519:1;1512:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "87600",
								"executionCost": "135",
								"totalCost": "87735"
							},
							"external": {
								"generateRandom()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 35,
									"end": 387,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 35,
									"end": 387,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 35,
									"end": 387,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 35,
									"end": 387,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 35,
									"end": 387,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 35,
									"end": 387,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 35,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 35,
									"end": 387,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 35,
									"end": 387,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 35,
									"end": 387,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 35,
									"end": 387,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 35,
									"end": 387,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 35,
									"end": 387,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 35,
									"end": 387,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 35,
									"end": 387,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 35,
									"end": 387,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 35,
									"end": 387,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 35,
									"end": 387,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 35,
									"end": 387,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 35,
									"end": 387,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 35,
									"end": 387,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b06b7c19106fac9c7cd3e24039b1bf5a328596eab4009d1ea61eced28900cee464736f6c63430008070033",
									".code": [
										{
											"begin": 35,
											"end": 387,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 35,
											"end": 387,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35,
											"end": 387,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35,
											"end": 387,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 35,
											"end": 387,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35,
											"end": 387,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 35,
											"end": 387,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 35,
											"end": 387,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35,
											"end": 387,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35,
											"end": 387,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35,
											"end": 387,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 35,
											"end": 387,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 35,
											"end": 387,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35,
											"end": 387,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35,
											"end": 387,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 35,
											"end": 387,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 35,
											"end": 387,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 35,
											"end": 387,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 35,
											"end": 387,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35,
											"end": 387,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35,
											"end": 387,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 35,
											"end": 387,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 35,
											"end": 387,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 35,
											"end": 387,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35,
											"end": 387,
											"name": "PUSH",
											"source": 0,
											"value": "2E4AF01"
										},
										{
											"begin": 35,
											"end": 387,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 35,
											"end": 387,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 35,
											"end": 387,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35,
											"end": 387,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 35,
											"end": 387,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35,
											"end": 387,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35,
											"end": 387,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35,
											"end": 387,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 95,
											"end": 380,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 95,
											"end": 380,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 95,
											"end": 380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 95,
											"end": 380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 95,
											"end": 380,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 95,
											"end": 380,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 95,
											"end": 380,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 95,
											"end": 380,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 95,
											"end": 380,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 95,
											"end": 380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 95,
											"end": 380,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 95,
											"end": 380,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 95,
											"end": 380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 95,
											"end": 380,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 95,
											"end": 380,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 95,
											"end": 380,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 95,
											"end": 380,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 95,
											"end": 380,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 95,
											"end": 380,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 95,
											"end": 380,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 95,
											"end": 380,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 95,
											"end": 380,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 95,
											"end": 380,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 95,
											"end": 380,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 95,
											"end": 380,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 141,
											"end": 146,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 158,
											"end": 170,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 251,
											"end": 254,
											"name": "PUSH",
											"source": 0,
											"value": "FB"
										},
										{
											"begin": 214,
											"end": 229,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 231,
											"end": 247,
											"name": "DIFFICULTY",
											"source": 0
										},
										{
											"begin": 197,
											"end": 248,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 197,
											"end": 248,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 197,
											"end": 248,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 197,
											"end": 248,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 197,
											"end": 248,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 197,
											"end": 248,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 197,
											"end": 248,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 197,
											"end": 248,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 197,
											"end": 248,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 197,
											"end": 248,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 197,
											"end": 248,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 197,
											"end": 248,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 197,
											"end": 248,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 197,
											"end": 248,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 197,
											"end": 248,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 197,
											"end": 248,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 197,
											"end": 248,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 197,
											"end": 248,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 197,
											"end": 248,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 197,
											"end": 248,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 197,
											"end": 248,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 197,
											"end": 248,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 197,
											"end": 248,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 197,
											"end": 248,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 187,
											"end": 249,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 187,
											"end": 249,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 187,
											"end": 249,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 187,
											"end": 249,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 187,
											"end": 249,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 187,
											"end": 249,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 179,
											"end": 250,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 179,
											"end": 250,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 179,
											"end": 254,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 179,
											"end": 254,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 179,
											"end": 254,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 179,
											"end": 254,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 179,
											"end": 254,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 179,
											"end": 254,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 179,
											"end": 254,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 158,
											"end": 255,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 158,
											"end": 255,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 366,
											"end": 372,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 359,
											"end": 372,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 359,
											"end": 372,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 359,
											"end": 372,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 95,
											"end": 380,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 95,
											"end": 380,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 164,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 7,
											"end": 164,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 112,
											"end": 157,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 132,
											"end": 156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 150,
											"end": 155,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 132,
											"end": 156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 132,
											"end": 156,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 132,
											"end": 156,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 132,
											"end": 156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 112,
											"end": 157,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 112,
											"end": 157,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 112,
											"end": 157,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 112,
											"end": 157,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 107,
											"end": 110,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 100,
											"end": 158,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7,
											"end": 164,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 164,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 164,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 170,
											"end": 282,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 170,
											"end": 282,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 253,
											"end": 275,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 269,
											"end": 274,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 253,
											"end": 275,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 253,
											"end": 275,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 253,
											"end": 275,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 253,
											"end": 275,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 248,
											"end": 251,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 241,
											"end": 276,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 170,
											"end": 282,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 170,
											"end": 282,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 170,
											"end": 282,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 288,
											"end": 685,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 288,
											"end": 685,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 428,
											"end": 431,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 443,
											"end": 518,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 514,
											"end": 517,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 505,
											"end": 511,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 443,
											"end": 518,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 443,
											"end": 518,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 443,
											"end": 518,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 443,
											"end": 518,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 543,
											"end": 545,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 538,
											"end": 541,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 534,
											"end": 546,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 527,
											"end": 546,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 527,
											"end": 546,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 556,
											"end": 631,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 627,
											"end": 630,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 618,
											"end": 624,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 556,
											"end": 631,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 556,
											"end": 631,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 556,
											"end": 631,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 556,
											"end": 631,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 656,
											"end": 658,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 651,
											"end": 654,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 647,
											"end": 659,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 640,
											"end": 659,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 640,
											"end": 659,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 676,
											"end": 679,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 669,
											"end": 679,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 669,
											"end": 679,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 288,
											"end": 685,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 288,
											"end": 685,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 288,
											"end": 685,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 288,
											"end": 685,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 288,
											"end": 685,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 288,
											"end": 685,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 691,
											"end": 905,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 691,
											"end": 905,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 780,
											"end": 784,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 818,
											"end": 820,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 807,
											"end": 816,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 803,
											"end": 821,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 795,
											"end": 821,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 795,
											"end": 821,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 831,
											"end": 898,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 895,
											"end": 896,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 884,
											"end": 893,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 880,
											"end": 897,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 871,
											"end": 877,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 831,
											"end": 898,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 831,
											"end": 898,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 831,
											"end": 898,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 831,
											"end": 898,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 691,
											"end": 905,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 691,
											"end": 905,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 691,
											"end": 905,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 691,
											"end": 905,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 691,
											"end": 905,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 911,
											"end": 988,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 911,
											"end": 988,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 948,
											"end": 955,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 977,
											"end": 982,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 966,
											"end": 982,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 966,
											"end": 982,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 911,
											"end": 988,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 911,
											"end": 988,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 911,
											"end": 988,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 911,
											"end": 988,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 994,
											"end": 1080,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 994,
											"end": 1080,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1029,
											"end": 1036,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1069,
											"end": 1073,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1062,
											"end": 1067,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1058,
											"end": 1074,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1047,
											"end": 1074,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1047,
											"end": 1074,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 994,
											"end": 1080,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 994,
											"end": 1080,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 994,
											"end": 1080,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 994,
											"end": 1080,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1086,
											"end": 1165,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 1086,
											"end": 1165,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1154,
											"end": 1159,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1143,
											"end": 1159,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1143,
											"end": 1159,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1086,
											"end": 1165,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1086,
											"end": 1165,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1086,
											"end": 1165,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1086,
											"end": 1165,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1171,
											"end": 1347,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1171,
											"end": 1347,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1203,
											"end": 1204,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1220,
											"end": 1240,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1238,
											"end": 1239,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1220,
											"end": 1240,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1220,
											"end": 1240,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1220,
											"end": 1240,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1220,
											"end": 1240,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1215,
											"end": 1240,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1215,
											"end": 1240,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1254,
											"end": 1274,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1272,
											"end": 1273,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1254,
											"end": 1274,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1254,
											"end": 1274,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1254,
											"end": 1274,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1254,
											"end": 1274,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1249,
											"end": 1274,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1249,
											"end": 1274,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1293,
											"end": 1294,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1318,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 1283,
											"end": 1318,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1298,
											"end": 1316,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1298,
											"end": 1316,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1298,
											"end": 1316,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1298,
											"end": 1316,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1298,
											"end": 1316,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1318,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 1283,
											"end": 1318,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1339,
											"end": 1340,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1336,
											"end": 1337,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1332,
											"end": 1341,
											"name": "MOD",
											"source": 1
										},
										{
											"begin": 1327,
											"end": 1341,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1327,
											"end": 1341,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1171,
											"end": 1347,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1171,
											"end": 1347,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1171,
											"end": 1347,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1171,
											"end": 1347,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1171,
											"end": 1347,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1353,
											"end": 1533,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1353,
											"end": 1533,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1401,
											"end": 1478,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1398,
											"end": 1399,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1391,
											"end": 1479,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1498,
											"end": 1502,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1495,
											"end": 1496,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1488,
											"end": 1503,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1522,
											"end": 1526,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1519,
											"end": 1520,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1512,
											"end": 1527,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"generateRandom()": "02e4af01"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"generateRandom\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/BlockProperty2.sol\":\"BlockPropertynew\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"test/BlockProperty2.sol\":{\"keccak256\":\"0xd48c61ec8937562a9ff724897566f0c35e8bfd3076bd99fd5df459978d003622\",\"urls\":[\"bzz-raw://b8cc7bc7235c4f961fa2ca577b8ac65c23cd76e4fe950b2fe024c711402b6b96\",\"dweb:/ipfs/QmasrK19WuNbSgBKYDmnrmyveXtcPpH8n1YZLYw4VoQHgc\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> test/BlockProperty2.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "test/BlockProperty2.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"test/BlockProperty2.sol": {
				"ast": {
					"absolutePath": "test/BlockProperty2.sol",
					"exportedSymbols": {
						"BlockPropertynew": [
							30
						]
					},
					"id": 31,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:31:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 30,
							"linearizedBaseContracts": [
								30
							],
							"name": "BlockPropertynew",
							"nameLocation": "44:16:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 28,
										"nodeType": "Block",
										"src": "147:233:0",
										"statements": [
											{
												"assignments": [
													7
												],
												"declarations": [
													{
														"constant": false,
														"id": 7,
														"mutability": "mutable",
														"name": "number",
														"nameLocation": "164:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 28,
														"src": "158:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 6,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "158:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 25,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 23,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"expression": {
																							"id": 15,
																							"name": "block",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967292,
																							"src": "214:5:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_magic_block",
																								"typeString": "block"
																							}
																						},
																						"id": 16,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "timestamp",
																						"nodeType": "MemberAccess",
																						"src": "214:15:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					{
																						"expression": {
																							"id": 17,
																							"name": "block",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967292,
																							"src": "231:5:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_magic_block",
																								"typeString": "block"
																							}
																						},
																						"id": 18,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "difficulty",
																						"nodeType": "MemberAccess",
																						"src": "231:16:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"id": 13,
																						"name": "abi",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967295,
																						"src": "197:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_abi",
																							"typeString": "abi"
																						}
																					},
																					"id": 14,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberName": "encodePacked",
																					"nodeType": "MemberAccess",
																					"src": "197:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																						"typeString": "function () pure returns (bytes memory)"
																					}
																				},
																				"id": 19,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "197:51:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"id": 12,
																			"name": "keccak256",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967288,
																			"src": "187:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																				"typeString": "function (bytes memory) pure returns (bytes32)"
																			}
																		},
																		"id": 20,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "187:62:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 11,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "179:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 10,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "179:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 21,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "179:71:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"hexValue": "323531",
																"id": 22,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "251:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_251_by_1",
																	"typeString": "int_const 251"
																},
																"value": "251"
															},
															"src": "179:75:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 9,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "173:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint8_$",
															"typeString": "type(uint8)"
														},
														"typeName": {
															"id": 8,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "173:5:0",
															"typeDescriptions": {}
														}
													},
													"id": 24,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "173:82:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "158:97:0"
											},
											{
												"expression": {
													"id": 26,
													"name": "number",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "366:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 5,
												"id": 27,
												"nodeType": "Return",
												"src": "359:13:0"
											}
										]
									},
									"functionSelector": "02e4af01",
									"id": 29,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "generateRandom",
									"nameLocation": "104:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "118:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 29,
												"src": "141:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 3,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "141:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "140:7:0"
									},
									"scope": 30,
									"src": "95:285:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 31,
							"src": "35:352:0",
							"usedErrors": []
						}
					],
					"src": "0:387:0"
				},
				"id": 0
			}
		}
	}
}