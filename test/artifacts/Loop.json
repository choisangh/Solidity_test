{
	"deploy": {
		"VM:-": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"main:1": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"ropsten:3": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"rinkeby:4": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"kovan:42": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"goerli:5": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"Custom": {
			"linkReferences": {},
			"autoDeployLib": true
		}
	},
	"data": {
		"bytecode": {
			"functionDebugData": {},
			"generatedSources": [],
			"linkReferences": {},
			"object": "608060405234801561001057600080fd5b5061029e806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063091da0cf1461005c578063174c9c7e14610066578063e7c898ef14610070578063f0d3799c1461007a578063fc0e600814610084575b600080fd5b61006461008e565b005b61006e6100d9565b005b61007861010d565b005b610082610146565b005b61008c610192565b005b600080600190505b600b8160ff1610156100d5576001826100af91906101cb565b9150600a8260ff1611156100c2576100d5565b80806100cd9061020f565b915050610096565b5050565b600080600190505b6001826100ee91906101cb565b915080806100fb9061020f565b915050600b8160ff16106100e1575050565b600080600190505b600b8160ff16101561014257808261012d91906101cb565b9150808061013a9061020f565b915050610115565b5050565b600080600190505b600b8160ff16101561018e5760058160ff16141561016b5761017b565b60018261017891906101cb565b91505b80806101869061020f565b91505061014e565b5050565b600080600190505b600b8160ff1610156101c75780826101b291906101cb565b915080806101bf9061020f565b91505061019a565b5050565b60006101d682610202565b91506101e183610202565b92508260ff038211156101f7576101f6610239565b5b828201905092915050565b600060ff82169050919050565b600061021a82610202565b915060ff82141561022e5761022d610239565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fdfea26469706673582212205bdb0b66e6050f915648fec38dd9a4f988df9f93db09326d78126beb70dcac9f64736f6c63430008070033",
			"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x29E DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x91DA0CF EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x174C9C7E EQ PUSH2 0x66 JUMPI DUP1 PUSH4 0xE7C898EF EQ PUSH2 0x70 JUMPI DUP1 PUSH4 0xF0D3799C EQ PUSH2 0x7A JUMPI DUP1 PUSH4 0xFC0E6008 EQ PUSH2 0x84 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64 PUSH2 0x8E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6E PUSH2 0xD9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x78 PUSH2 0x10D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x82 PUSH2 0x146 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x8C PUSH2 0x192 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 POP JUMPDEST PUSH1 0xB DUP2 PUSH1 0xFF AND LT ISZERO PUSH2 0xD5 JUMPI PUSH1 0x1 DUP3 PUSH2 0xAF SWAP2 SWAP1 PUSH2 0x1CB JUMP JUMPDEST SWAP2 POP PUSH1 0xA DUP3 PUSH1 0xFF AND GT ISZERO PUSH2 0xC2 JUMPI PUSH2 0xD5 JUMP JUMPDEST DUP1 DUP1 PUSH2 0xCD SWAP1 PUSH2 0x20F JUMP JUMPDEST SWAP2 POP POP PUSH2 0x96 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 POP JUMPDEST PUSH1 0x1 DUP3 PUSH2 0xEE SWAP2 SWAP1 PUSH2 0x1CB JUMP JUMPDEST SWAP2 POP DUP1 DUP1 PUSH2 0xFB SWAP1 PUSH2 0x20F JUMP JUMPDEST SWAP2 POP POP PUSH1 0xB DUP2 PUSH1 0xFF AND LT PUSH2 0xE1 JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 POP JUMPDEST PUSH1 0xB DUP2 PUSH1 0xFF AND LT ISZERO PUSH2 0x142 JUMPI DUP1 DUP3 PUSH2 0x12D SWAP2 SWAP1 PUSH2 0x1CB JUMP JUMPDEST SWAP2 POP DUP1 DUP1 PUSH2 0x13A SWAP1 PUSH2 0x20F JUMP JUMPDEST SWAP2 POP POP PUSH2 0x115 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 POP JUMPDEST PUSH1 0xB DUP2 PUSH1 0xFF AND LT ISZERO PUSH2 0x18E JUMPI PUSH1 0x5 DUP2 PUSH1 0xFF AND EQ ISZERO PUSH2 0x16B JUMPI PUSH2 0x17B JUMP JUMPDEST PUSH1 0x1 DUP3 PUSH2 0x178 SWAP2 SWAP1 PUSH2 0x1CB JUMP JUMPDEST SWAP2 POP JUMPDEST DUP1 DUP1 PUSH2 0x186 SWAP1 PUSH2 0x20F JUMP JUMPDEST SWAP2 POP POP PUSH2 0x14E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 POP JUMPDEST PUSH1 0xB DUP2 PUSH1 0xFF AND LT ISZERO PUSH2 0x1C7 JUMPI DUP1 DUP3 PUSH2 0x1B2 SWAP2 SWAP1 PUSH2 0x1CB JUMP JUMPDEST SWAP2 POP DUP1 DUP1 PUSH2 0x1BF SWAP1 PUSH2 0x20F JUMP JUMPDEST SWAP2 POP POP PUSH2 0x19A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D6 DUP3 PUSH2 0x202 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E1 DUP4 PUSH2 0x202 JUMP JUMPDEST SWAP3 POP DUP3 PUSH1 0xFF SUB DUP3 GT ISZERO PUSH2 0x1F7 JUMPI PUSH2 0x1F6 PUSH2 0x239 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21A DUP3 PUSH2 0x202 JUMP JUMPDEST SWAP2 POP PUSH1 0xFF DUP3 EQ ISZERO PUSH2 0x22E JUMPI PUSH2 0x22D PUSH2 0x239 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMPDEST 0xDB SIGNEXTEND PUSH7 0xE6050F915648FE 0xC3 DUP14 0xD9 LOG4 0xF9 DUP9 0xDF SWAP16 SWAP4 0xDB MULMOD ORIGIN PUSH14 0x78126BEB70DCAC9F64736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
			"sourceMap": "37:931:0:-:0;;;;;;;;;;;;;;;;;;;"
		},
		"deployedBytecode": {
			"functionDebugData": {
				"@doWhileLoop_73": {
					"entryPoint": 217,
					"id": 73,
					"parameterSlots": 0,
					"returnSlots": 0
				},
				"@forLoop_25": {
					"entryPoint": 402,
					"id": 25,
					"parameterSlots": 0,
					"returnSlots": 0
				},
				"@loopbreak_103": {
					"entryPoint": 142,
					"id": 103,
					"parameterSlots": 0,
					"returnSlots": 0
				},
				"@loopcontinue_133": {
					"entryPoint": 326,
					"id": 133,
					"parameterSlots": 0,
					"returnSlots": 0
				},
				"@whileLoop_49": {
					"entryPoint": 269,
					"id": 49,
					"parameterSlots": 0,
					"returnSlots": 0
				},
				"checked_add_t_uint8": {
					"entryPoint": 459,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"cleanup_t_uint8": {
					"entryPoint": 514,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 1
				},
				"increment_t_uint8": {
					"entryPoint": 527,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 1
				},
				"panic_error_0x11": {
					"entryPoint": 569,
					"id": null,
					"parameterSlots": 0,
					"returnSlots": 0
				}
			},
			"generatedSources": [
				{
					"ast": {
						"nodeType": "YulBlock",
						"src": "0:698:1",
						"statements": [
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "49:195:1",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "59:23:1",
											"value": {
												"arguments": [
													{
														"name": "x",
														"nodeType": "YulIdentifier",
														"src": "80:1:1"
													}
												],
												"functionName": {
													"name": "cleanup_t_uint8",
													"nodeType": "YulIdentifier",
													"src": "64:15:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "64:18:1"
											},
											"variableNames": [
												{
													"name": "x",
													"nodeType": "YulIdentifier",
													"src": "59:1:1"
												}
											]
										},
										{
											"nodeType": "YulAssignment",
											"src": "91:23:1",
											"value": {
												"arguments": [
													{
														"name": "y",
														"nodeType": "YulIdentifier",
														"src": "112:1:1"
													}
												],
												"functionName": {
													"name": "cleanup_t_uint8",
													"nodeType": "YulIdentifier",
													"src": "96:15:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "96:18:1"
											},
											"variableNames": [
												{
													"name": "y",
													"nodeType": "YulIdentifier",
													"src": "91:1:1"
												}
											]
										},
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "190:22:1",
												"statements": [
													{
														"expression": {
															"arguments": [],
															"functionName": {
																"name": "panic_error_0x11",
																"nodeType": "YulIdentifier",
																"src": "192:16:1"
															},
															"nodeType": "YulFunctionCall",
															"src": "192:18:1"
														},
														"nodeType": "YulExpressionStatement",
														"src": "192:18:1"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"name": "x",
														"nodeType": "YulIdentifier",
														"src": "173:1:1"
													},
													{
														"arguments": [
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "180:4:1",
																"type": "",
																"value": "0xff"
															},
															{
																"name": "y",
																"nodeType": "YulIdentifier",
																"src": "186:1:1"
															}
														],
														"functionName": {
															"name": "sub",
															"nodeType": "YulIdentifier",
															"src": "176:3:1"
														},
														"nodeType": "YulFunctionCall",
														"src": "176:12:1"
													}
												],
												"functionName": {
													"name": "gt",
													"nodeType": "YulIdentifier",
													"src": "170:2:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "170:19:1"
											},
											"nodeType": "YulIf",
											"src": "167:45:1"
										},
										{
											"nodeType": "YulAssignment",
											"src": "222:16:1",
											"value": {
												"arguments": [
													{
														"name": "x",
														"nodeType": "YulIdentifier",
														"src": "233:1:1"
													},
													{
														"name": "y",
														"nodeType": "YulIdentifier",
														"src": "236:1:1"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "229:3:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "229:9:1"
											},
											"variableNames": [
												{
													"name": "sum",
													"nodeType": "YulIdentifier",
													"src": "222:3:1"
												}
											]
										}
									]
								},
								"name": "checked_add_t_uint8",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "x",
										"nodeType": "YulTypedName",
										"src": "36:1:1",
										"type": ""
									},
									{
										"name": "y",
										"nodeType": "YulTypedName",
										"src": "39:1:1",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "sum",
										"nodeType": "YulTypedName",
										"src": "45:3:1",
										"type": ""
									}
								],
								"src": "7:237:1"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "293:43:1",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "303:27:1",
											"value": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "318:5:1"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "325:4:1",
														"type": "",
														"value": "0xff"
													}
												],
												"functionName": {
													"name": "and",
													"nodeType": "YulIdentifier",
													"src": "314:3:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "314:16:1"
											},
											"variableNames": [
												{
													"name": "cleaned",
													"nodeType": "YulIdentifier",
													"src": "303:7:1"
												}
											]
										}
									]
								},
								"name": "cleanup_t_uint8",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "275:5:1",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "cleaned",
										"nodeType": "YulTypedName",
										"src": "285:7:1",
										"type": ""
									}
								],
								"src": "250:86:1"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "383:126:1",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "393:31:1",
											"value": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "418:5:1"
													}
												],
												"functionName": {
													"name": "cleanup_t_uint8",
													"nodeType": "YulIdentifier",
													"src": "402:15:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "402:22:1"
											},
											"variableNames": [
												{
													"name": "value",
													"nodeType": "YulIdentifier",
													"src": "393:5:1"
												}
											]
										},
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "452:22:1",
												"statements": [
													{
														"expression": {
															"arguments": [],
															"functionName": {
																"name": "panic_error_0x11",
																"nodeType": "YulIdentifier",
																"src": "454:16:1"
															},
															"nodeType": "YulFunctionCall",
															"src": "454:18:1"
														},
														"nodeType": "YulExpressionStatement",
														"src": "454:18:1"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "439:5:1"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "446:4:1",
														"type": "",
														"value": "0xff"
													}
												],
												"functionName": {
													"name": "eq",
													"nodeType": "YulIdentifier",
													"src": "436:2:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "436:15:1"
											},
											"nodeType": "YulIf",
											"src": "433:41:1"
										},
										{
											"nodeType": "YulAssignment",
											"src": "483:20:1",
											"value": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "494:5:1"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "501:1:1",
														"type": "",
														"value": "1"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "490:3:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "490:13:1"
											},
											"variableNames": [
												{
													"name": "ret",
													"nodeType": "YulIdentifier",
													"src": "483:3:1"
												}
											]
										}
									]
								},
								"name": "increment_t_uint8",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "369:5:1",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "ret",
										"nodeType": "YulTypedName",
										"src": "379:3:1",
										"type": ""
									}
								],
								"src": "342:167:1"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "543:152:1",
									"statements": [
										{
											"expression": {
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "560:1:1",
														"type": "",
														"value": "0"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "563:77:1",
														"type": "",
														"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "553:6:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "553:88:1"
											},
											"nodeType": "YulExpressionStatement",
											"src": "553:88:1"
										},
										{
											"expression": {
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "657:1:1",
														"type": "",
														"value": "4"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "660:4:1",
														"type": "",
														"value": "0x11"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "650:6:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "650:15:1"
											},
											"nodeType": "YulExpressionStatement",
											"src": "650:15:1"
										},
										{
											"expression": {
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "681:1:1",
														"type": "",
														"value": "0"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "684:4:1",
														"type": "",
														"value": "0x24"
													}
												],
												"functionName": {
													"name": "revert",
													"nodeType": "YulIdentifier",
													"src": "674:6:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "674:15:1"
											},
											"nodeType": "YulExpressionStatement",
											"src": "674:15:1"
										}
									]
								},
								"name": "panic_error_0x11",
								"nodeType": "YulFunctionDefinition",
								"src": "515:180:1"
							}
						]
					},
					"contents": "{\n\n    function checked_add_t_uint8(x, y) -> sum {\n        x := cleanup_t_uint8(x)\n        y := cleanup_t_uint8(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function increment_t_uint8(value) -> ret {\n        value := cleanup_t_uint8(value)\n        if eq(value, 0xff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n}\n",
					"id": 1,
					"language": "Yul",
					"name": "#utility.yul"
				}
			],
			"immutableReferences": {},
			"linkReferences": {},
			"object": "608060405234801561001057600080fd5b50600436106100575760003560e01c8063091da0cf1461005c578063174c9c7e14610066578063e7c898ef14610070578063f0d3799c1461007a578063fc0e600814610084575b600080fd5b61006461008e565b005b61006e6100d9565b005b61007861010d565b005b610082610146565b005b61008c610192565b005b600080600190505b600b8160ff1610156100d5576001826100af91906101cb565b9150600a8260ff1611156100c2576100d5565b80806100cd9061020f565b915050610096565b5050565b600080600190505b6001826100ee91906101cb565b915080806100fb9061020f565b915050600b8160ff16106100e1575050565b600080600190505b600b8160ff16101561014257808261012d91906101cb565b9150808061013a9061020f565b915050610115565b5050565b600080600190505b600b8160ff16101561018e5760058160ff16141561016b5761017b565b60018261017891906101cb565b91505b80806101869061020f565b91505061014e565b5050565b600080600190505b600b8160ff1610156101c75780826101b291906101cb565b915080806101bf9061020f565b91505061019a565b5050565b60006101d682610202565b91506101e183610202565b92508260ff038211156101f7576101f6610239565b5b828201905092915050565b600060ff82169050919050565b600061021a82610202565b915060ff82141561022e5761022d610239565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fdfea26469706673582212205bdb0b66e6050f915648fec38dd9a4f988df9f93db09326d78126beb70dcac9f64736f6c63430008070033",
			"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x91DA0CF EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x174C9C7E EQ PUSH2 0x66 JUMPI DUP1 PUSH4 0xE7C898EF EQ PUSH2 0x70 JUMPI DUP1 PUSH4 0xF0D3799C EQ PUSH2 0x7A JUMPI DUP1 PUSH4 0xFC0E6008 EQ PUSH2 0x84 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64 PUSH2 0x8E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6E PUSH2 0xD9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x78 PUSH2 0x10D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x82 PUSH2 0x146 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x8C PUSH2 0x192 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 POP JUMPDEST PUSH1 0xB DUP2 PUSH1 0xFF AND LT ISZERO PUSH2 0xD5 JUMPI PUSH1 0x1 DUP3 PUSH2 0xAF SWAP2 SWAP1 PUSH2 0x1CB JUMP JUMPDEST SWAP2 POP PUSH1 0xA DUP3 PUSH1 0xFF AND GT ISZERO PUSH2 0xC2 JUMPI PUSH2 0xD5 JUMP JUMPDEST DUP1 DUP1 PUSH2 0xCD SWAP1 PUSH2 0x20F JUMP JUMPDEST SWAP2 POP POP PUSH2 0x96 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 POP JUMPDEST PUSH1 0x1 DUP3 PUSH2 0xEE SWAP2 SWAP1 PUSH2 0x1CB JUMP JUMPDEST SWAP2 POP DUP1 DUP1 PUSH2 0xFB SWAP1 PUSH2 0x20F JUMP JUMPDEST SWAP2 POP POP PUSH1 0xB DUP2 PUSH1 0xFF AND LT PUSH2 0xE1 JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 POP JUMPDEST PUSH1 0xB DUP2 PUSH1 0xFF AND LT ISZERO PUSH2 0x142 JUMPI DUP1 DUP3 PUSH2 0x12D SWAP2 SWAP1 PUSH2 0x1CB JUMP JUMPDEST SWAP2 POP DUP1 DUP1 PUSH2 0x13A SWAP1 PUSH2 0x20F JUMP JUMPDEST SWAP2 POP POP PUSH2 0x115 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 POP JUMPDEST PUSH1 0xB DUP2 PUSH1 0xFF AND LT ISZERO PUSH2 0x18E JUMPI PUSH1 0x5 DUP2 PUSH1 0xFF AND EQ ISZERO PUSH2 0x16B JUMPI PUSH2 0x17B JUMP JUMPDEST PUSH1 0x1 DUP3 PUSH2 0x178 SWAP2 SWAP1 PUSH2 0x1CB JUMP JUMPDEST SWAP2 POP JUMPDEST DUP1 DUP1 PUSH2 0x186 SWAP1 PUSH2 0x20F JUMP JUMPDEST SWAP2 POP POP PUSH2 0x14E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 POP JUMPDEST PUSH1 0xB DUP2 PUSH1 0xFF AND LT ISZERO PUSH2 0x1C7 JUMPI DUP1 DUP3 PUSH2 0x1B2 SWAP2 SWAP1 PUSH2 0x1CB JUMP JUMPDEST SWAP2 POP DUP1 DUP1 PUSH2 0x1BF SWAP1 PUSH2 0x20F JUMP JUMPDEST SWAP2 POP POP PUSH2 0x19A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D6 DUP3 PUSH2 0x202 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E1 DUP4 PUSH2 0x202 JUMP JUMPDEST SWAP3 POP DUP3 PUSH1 0xFF SUB DUP3 GT ISZERO PUSH2 0x1F7 JUMPI PUSH2 0x1F6 PUSH2 0x239 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21A DUP3 PUSH2 0x202 JUMP JUMPDEST SWAP2 POP PUSH1 0xFF DUP3 EQ ISZERO PUSH2 0x22E JUMPI PUSH2 0x22D PUSH2 0x239 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMPDEST 0xDB SIGNEXTEND PUSH7 0xE6050F915648FE 0xC3 DUP14 0xD9 LOG4 0xF9 DUP9 0xDF SWAP16 SWAP4 0xDB MULMOD ORIGIN PUSH14 0x78126BEB70DCAC9F64736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
			"sourceMap": "37:931:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;522:197;;;:::i;:::-;;354:160;;;:::i;:::-;;194:154;;;:::i;:::-;;731:226;;;:::i;:::-;;57:129;;;:::i;:::-;;522:197;560:9;588:7;596:1;588:9;;584:128;603:2;599:1;:6;;;584:128;;;633:1;626:8;;;;;:::i;:::-;;;658:2;654:3;:6;;;650:51;;;680:5;;650:51;607:3;;;;;:::i;:::-;;;;584:128;;;;549:170;522:197::o;354:160::-;394:9;418:7;428:1;418:11;;440:67;464:1;457:8;;;;;:::i;:::-;;;480:3;;;;;:::i;:::-;;;;503:2;501:1;:4;;;440:67;;383:131;;354:160::o;194:154::-;232:9;254:7;262:1;254:9;;274:65;282:2;280:1;:4;;;274:65;;;307:1;300:8;;;;;:::i;:::-;;;324:3;;;;;:::i;:::-;;;;274:65;;;221:127;;194:154::o;731:226::-;772:9;800:7;808:1;800:9;;796:154;815:2;811:1;:6;;;796:154;;;847:1;842;:6;;;838:77;;;868:8;;838:77;936:1;929:8;;;;;:::i;:::-;;;796:154;819:3;;;;;:::i;:::-;;;;796:154;;;;761:196;731:226::o;57:129::-;93:9;121:7;129:1;121:9;;117:62;136:2;132:1;:6;;;117:62;;;166:1;159:8;;;;;:::i;:::-;;;140:3;;;;;:::i;:::-;;;;117:62;;;;82:104;57:129::o;7:237:1:-;45:3;64:18;80:1;64:18;:::i;:::-;59:23;;96:18;112:1;96:18;:::i;:::-;91:23;;186:1;180:4;176:12;173:1;170:19;167:45;;;192:18;;:::i;:::-;167:45;236:1;233;229:9;222:16;;7:237;;;;:::o;250:86::-;285:7;325:4;318:5;314:16;303:27;;250:86;;;:::o;342:167::-;379:3;402:22;418:5;402:22;:::i;:::-;393:31;;446:4;439:5;436:15;433:41;;;454:18;;:::i;:::-;433:41;501:1;494:5;490:13;483:20;;342:167;;;:::o;515:180::-;563:77;560:1;553:88;660:4;657:1;650:15;684:4;681:1;674:15"
		},
		"gasEstimates": {
			"creation": {
				"codeDepositCost": "134000",
				"executionCost": "177",
				"totalCost": "134177"
			},
			"external": {
				"doWhileLoop()": "infinite",
				"forLoop()": "infinite",
				"loopbreak()": "infinite",
				"loopcontinue()": "infinite",
				"whileLoop()": "infinite"
			}
		},
		"methodIdentifiers": {
			"doWhileLoop()": "174c9c7e",
			"forLoop()": "fc0e6008",
			"loopbreak()": "091da0cf",
			"loopcontinue()": "f0d3799c",
			"whileLoop()": "e7c898ef"
		}
	},
	"abi": [
		{
			"inputs": [],
			"name": "doWhileLoop",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "forLoop",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "loopbreak",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "loopcontinue",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "whileLoop",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		}
	]
}